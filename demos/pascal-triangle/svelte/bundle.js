(function(){"use strict";function noop(){}function run(fn){return fn()}function blank_object(){return Object.create(null)}function run_all(fns){fns.forEach(run)}function is_function(thing){return typeof thing==="function"}function safe_not_equal(a,b){return a!=a?b==b:a!==b||(a&&typeof a==="object"||typeof a==="function")}function append(target,node){target.appendChild(node)}function insert(target,node,anchor){target.insertBefore(node,anchor||null)}function detach(node){node.parentNode.removeChild(node)}function destroy_each(iterations,detaching){for(let i=0;i<iterations.length;i+=1){if(iterations[i])iterations[i].d(detaching)}}function element(name){return document.createElement(name)}function text(data){return document.createTextNode(data)}function space(){return text(" ")}function listen(node,event,handler,options){node.addEventListener(event,handler,options);return()=>node.removeEventListener(event,handler,options)}function attr(node,attribute,value){if(value==null)node.removeAttribute(attribute);else node.setAttribute(attribute,value)}function set_custom_element_data(node,prop,value){if(prop in node){node[prop]=value}else{attr(node,prop,value)}}function children(element){return Array.from(element.childNodes)}function set_data(text,data){data=""+data;if(text.data!==data)text.data=data}let current_component;function set_current_component(component){current_component=component}const dirty_components=[];const binding_callbacks=[];const render_callbacks=[];const flush_callbacks=[];const resolved_promise=Promise.resolve();let update_scheduled=false;function schedule_update(){if(!update_scheduled){update_scheduled=true;resolved_promise.then(flush)}}function add_render_callback(fn){render_callbacks.push(fn)}function flush(){const seen_callbacks=new Set;do{while(dirty_components.length){const component=dirty_components.shift();set_current_component(component);update(component.$$)}while(binding_callbacks.length)binding_callbacks.pop()();for(let i=0;i<render_callbacks.length;i+=1){const callback=render_callbacks[i];if(!seen_callbacks.has(callback)){callback();seen_callbacks.add(callback)}}render_callbacks.length=0}while(dirty_components.length);while(flush_callbacks.length){flush_callbacks.pop()()}update_scheduled=false}function update($$){if($$.fragment){$$.update($$.dirty);run_all($$.before_update);$$.fragment.p($$.dirty,$$.ctx);$$.dirty=null;$$.after_update.forEach(add_render_callback)}}const outroing=new Set;function transition_in(block,local){if(block&&block.i){outroing.delete(block);block.i(local)}}function mount_component(component,target,anchor){const{fragment:fragment,on_mount:on_mount,on_destroy:on_destroy,after_update:after_update}=component.$$;fragment.m(target,anchor);add_render_callback(()=>{const new_on_destroy=on_mount.map(run).filter(is_function);if(on_destroy){on_destroy.push(...new_on_destroy)}else{run_all(new_on_destroy)}component.$$.on_mount=[]});after_update.forEach(add_render_callback)}function destroy_component(component,detaching){if(component.$$.fragment){run_all(component.$$.on_destroy);component.$$.fragment.d(detaching);component.$$.on_destroy=component.$$.fragment=null;component.$$.ctx={}}}function make_dirty(component,key){if(!component.$$.dirty){dirty_components.push(component);schedule_update();component.$$.dirty=blank_object()}component.$$.dirty[key]=true}function init(component,options,instance,create_fragment,not_equal,prop_names){const parent_component=current_component;set_current_component(component);const props=options.props||{};const $$=component.$$={fragment:null,ctx:null,props:prop_names,update:noop,not_equal:not_equal,bound:blank_object(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(parent_component?parent_component.$$.context:[]),callbacks:blank_object(),dirty:null};let ready=false;$$.ctx=instance?instance(component,props,(key,value)=>{if($$.ctx&&not_equal($$.ctx[key],$$.ctx[key]=value)){if($$.bound[key])$$.bound[key](value);if(ready)make_dirty(component,key)}}):props;$$.update();ready=true;run_all($$.before_update);$$.fragment=create_fragment($$.ctx);if(options.target){if(options.hydrate){$$.fragment.l(children(options.target))}else{$$.fragment.c()}if(options.intro)transition_in(component.$$.fragment);mount_component(component,options.target,options.anchor);flush()}set_current_component(parent_component)}let SvelteElement;if(typeof HTMLElement!=="undefined"){SvelteElement=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}connectedCallback(){for(const key in this.$$.slotted){this.appendChild(this.$$.slotted[key])}}attributeChangedCallback(attr,_oldValue,newValue){this[attr]=newValue}$destroy(){destroy_component(this,1);this.$destroy=noop}$on(type,callback){const callbacks=this.$$.callbacks[type]||(this.$$.callbacks[type]=[]);callbacks.push(callback);return()=>{const index=callbacks.indexOf(callback);if(index!==-1)callbacks.splice(index,1)}}$set(){}}}function get_each_context_1(ctx,list,i){const child_ctx=Object.create(ctx);child_ctx.item=list[i];return child_ctx}function get_each_context(ctx,list,i){const child_ctx=Object.create(ctx);child_ctx.line=list[i];return child_ctx}function create_each_block_1(ctx){var triangle_item,triangle_item_text_value;return{c(){triangle_item=element("triangle-item");set_custom_element_data(triangle_item,"text",triangle_item_text_value=ctx.item)},m(target,anchor){insert(target,triangle_item,anchor)},p(changed,ctx){if(changed.list&&triangle_item_text_value!==(triangle_item_text_value=ctx.item)){set_custom_element_data(triangle_item,"text",triangle_item_text_value)}},d(detaching){if(detaching){detach(triangle_item)}}}}function create_each_block(ctx){var div,t;var each_value_1=ctx.line;var each_blocks=[];for(var i=0;i<each_value_1.length;i+=1){each_blocks[i]=create_each_block_1(get_each_context_1(ctx,each_value_1,i))}return{c(){div=element("div");for(var i=0;i<each_blocks.length;i+=1){each_blocks[i].c()}t=space()},m(target,anchor){insert(target,div,anchor);for(var i=0;i<each_blocks.length;i+=1){each_blocks[i].m(div,null)}append(div,t)},p(changed,ctx){if(changed.list){each_value_1=ctx.line;for(var i=0;i<each_value_1.length;i+=1){const child_ctx=get_each_context_1(ctx,each_value_1,i);if(each_blocks[i]){each_blocks[i].p(changed,child_ctx)}else{each_blocks[i]=create_each_block_1(child_ctx);each_blocks[i].c();each_blocks[i].m(div,t)}}for(;i<each_blocks.length;i+=1){each_blocks[i].d(1)}each_blocks.length=each_value_1.length}},d(detaching){if(detaching){detach(div)}destroy_each(each_blocks,detaching)}}}function create_fragment(ctx){var div0,button0,t1,button1,t3,button2,t5,div1,dispose;var each_value=ctx.list;var each_blocks=[];for(var i=0;i<each_value.length;i+=1){each_blocks[i]=create_each_block(get_each_context(ctx,each_value,i))}return{c(){div0=element("div");button0=element("button");button0.textContent="Load 10";t1=space();button1=element("button");button1.textContent="Load 100";t3=space();button2=element("button");button2.textContent="Load 500";t5=space();div1=element("div");for(var i=0;i<each_blocks.length;i+=1){each_blocks[i].c()}this.c=noop;attr(button0,"data-value","10");attr(button1,"data-value","100");attr(button2,"data-value","500");dispose=[listen(button0,"click",ctx.handleLoad),listen(button1,"click",ctx.handleLoad),listen(button2,"click",ctx.handleLoad)]},m(target,anchor){insert(target,div0,anchor);append(div0,button0);append(div0,t1);append(div0,button1);append(div0,t3);append(div0,button2);insert(target,t5,anchor);insert(target,div1,anchor);for(var i=0;i<each_blocks.length;i+=1){each_blocks[i].m(div1,null)}},p(changed,ctx){if(changed.list){each_value=ctx.list;for(var i=0;i<each_value.length;i+=1){const child_ctx=get_each_context(ctx,each_value,i);if(each_blocks[i]){each_blocks[i].p(changed,child_ctx)}else{each_blocks[i]=create_each_block(child_ctx);each_blocks[i].c();each_blocks[i].m(div1,null)}}for(;i<each_blocks.length;i+=1){each_blocks[i].d(1)}each_blocks.length=each_value.length}},i:noop,o:noop,d(detaching){if(detaching){detach(div0);detach(t5);detach(div1)}destroy_each(each_blocks,detaching);run_all(dispose)}}}function generateData(rows){const n=rows;const data=[];data[0]=[1];data[1]=[1,1];for(let row=2;row<n;row++){data[row]=[1];for(let col=1;col<=row-1;col++){const prevRow=data[row-1];data[row][col]=prevRow[col]+prevRow[col-1];data[row].push(1)}}return data}function instance($$self,$$props,$$invalidate){let list=generateData(100);function handleLoad(event){console.log("handleLoad: ",event.target.dataset.value);$$invalidate("list",list=generateData(event.target.dataset.value))}return{list:list,handleLoad:handleLoad}}class Pascal_triangle extends SvelteElement{constructor(options){super();init(this,{target:this.shadowRoot},instance,create_fragment,safe_not_equal,[]);if(options){if(options.target){insert(options.target,this,options.anchor)}}}}customElements.define("pascal-triangle",Pascal_triangle);function create_fragment$1(ctx){var span,t;return{c(){span=element("span");t=text(ctx.text);this.c=noop},m(target,anchor){insert(target,span,anchor);append(span,t)},p(changed,ctx){if(changed.text){set_data(t,ctx.text)}},i:noop,o:noop,d(detaching){if(detaching){detach(span)}}}}function instance$1($$self,$$props,$$invalidate){let{text:text}=$$props;$$self.$set=($$props=>{if("text"in $$props)$$invalidate("text",text=$$props.text)});return{text:text}}class Triangle_item extends SvelteElement{constructor(options){super();init(this,{target:this.shadowRoot},instance$1,create_fragment$1,safe_not_equal,["text"]);if(options){if(options.target){insert(options.target,this,options.anchor)}if(options.props){this.$set(options.props);flush()}}}static get observedAttributes(){return["text"]}get text(){return this.$$.ctx.text}set text(text){this.$set({text:text});flush()}}customElements.define("triangle-item",Triangle_item);console.log(Pascal_triangle);console.log(Triangle_item)})();