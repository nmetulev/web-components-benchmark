{"version":3,"file":"atomico.umd.js","sources":["../../node_modules/@atomico/core/module.js","../../node_modules/@atomico/base-element/module.js","../../node_modules/@atomico/element/module.js","../../../../node_modules/style-inject/dist/style-inject.es.js","../../src/components/Input/index.js","../../src/components/Item/index.js","../../src/index.js"],"sourcesContent":["/**\r\n * @param {VnodeType} type\r\n * @param {VnodeProps} [props]\r\n * @param {Vnode|Vnode[]} [children]\r\n * @returns {Vnode}\r\n **/\r\nfunction createElement(type, props, children) {\r\n\tprops = props || {};\r\n\tif (arguments.length > 3) {\r\n\t\tchildren = [children];\r\n\t\tfor (let i = 3; i < arguments.length; i++) {\r\n\t\t\tchildren.push(arguments[i]);\r\n\t\t}\r\n\t}\r\n\tif (children != null) {\r\n\t\tprops.children = children;\r\n\t}\r\n\r\n\tlet vnode = { type, props },\r\n\t\tkey = props.key;\r\n\tif (key != null) {\r\n\t\tvnode.key = \"\" + key;\r\n\t}\r\n\t/**@type {Vnode} */\r\n\treturn vnode;\r\n}\r\n/**\r\n * Create or maintain a vnode, if this is boolean,\r\n * string or null returns a text type vnode\r\n * @param {(Vnode|string|null|boolean)} value\r\n * @returns {Vnode}\r\n **/\r\nfunction toVnode(value) {\r\n\tif (value == null || typeof value == \"boolean\") value = \"\";\r\n\r\n\tif (typeof value == \"string\" || typeof value == \"number\") {\r\n\t\treturn createElement(null, null, \"\" + value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * @typedef {(Object<string,any>)} VnodeProps;\r\n *\r\n * @typedef {(Function|string)} VnodeType;\r\n *\r\n * @typedef {{type:VnodeType,props:VnodeProps}} Vnode\r\n **/\n\nconst ARRAY_EMPTY = [];\r\nconst OBJECT_EMPTY = {};\r\n\r\nconst STATE = Symbol(\"Atomico.state\");\r\nconst NODE_TYPE = \"localName\";\r\n\r\nconst NODE_HOST = \"host\";\r\n\r\nconst COMPONENT_CREATE = 0x61;\r\nconst COMPONENT_UPDATE = 0x74;\r\nconst COMPONENT_CREATED = 0x4f;\r\nconst COMPONENT_UPDATED = 0x4d;\r\nconst COMPONENT_CLEAR = 0x49;\r\nconst COMPONENT_REMOVE = 0x43;\r\n\r\nconst IGNORE_PROPS = {\r\n\tchildren: 1\r\n};\r\n\r\nconst IGNORE_CHILDREN = {\r\n\tinnerHTML: 1,\r\n\ttextContent: 1,\r\n\tcontenteditable: 1\r\n};\r\n\r\nconst HYDRATE_PROPS = {\r\n\tclassName: 1,\r\n\tid: 1,\r\n\tchecked: 1,\r\n\tvalue: 1,\r\n\tselected: 1\r\n};\r\n\r\nconst MEMO_EVENT_NAME = {};\r\nconst MEMO_CSS_PROPS = {};\n\n/**\r\n * Return if value is array\r\n * @param {*}\r\n * @return {boolean}\r\n */\r\nfunction isArray(value) {\r\n\treturn Array.isArray(value);\r\n}\r\n/**\r\n * compare 2 array\r\n * @param {array} before\r\n * @param {array} after\r\n * @example\r\n * isEqualArray([1,2,3,4],[1,2,3,4]) // true\r\n * isEqualArray([1,2,3,4],[1,2,3])   // false\r\n * isEqualArray([5,1,2,3],[1,2,3,5]) // false\r\n * isEqualArray([],[]) // true\r\n * @returns {boolean}\r\n */\r\nfunction isEqualArray(before, after) {\r\n\tlet length = before.length;\r\n\tif (length !== after.length) return false;\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tif (before[i] !== after[i]) return false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction assign(master, commit) {\r\n\tfor (let key in commit) {\r\n\t\tmaster[key] = commit[key];\r\n\t}\r\n\tfor (let i = 2; i < arguments.length; i++) assign(master, arguments[i]);\r\n\treturn master;\r\n}\r\n\r\nlet defer = Promise.prototype.then.bind(Promise.resolve());\r\n\r\nfunction isFunction(value) {\r\n\treturn typeof value == \"function\";\r\n}\n\n/**\r\n *\r\n * @param {import(\"./render\").HTMLNode} node\r\n * @param {Object} props\r\n * @param {Object} nextProps\r\n * @param {boolean} isSvg\r\n * @param {Object} handlers\r\n * @param {any} [bindEvent]\r\n **/\r\nfunction diffProps(node, props, nextProps, isSvg, handlers, bindEvent) {\r\n\tprops = props || {};\r\n\r\n\tfor (let key in props) {\r\n\t\tif (IGNORE_PROPS[key]) continue;\r\n\t\tif (!(key in nextProps)) {\r\n\t\t\tsetProperty(node, key, props[key], null, isSvg, handlers);\r\n\t\t}\r\n\t}\r\n\tlet ignoreChildren;\r\n\tfor (let key in nextProps) {\r\n\t\tif (IGNORE_PROPS[key]) continue;\r\n\t\tsetProperty(\r\n\t\t\tnode,\r\n\t\t\tkey,\r\n\t\t\tprops[key],\r\n\t\t\tnextProps[key],\r\n\t\t\tisSvg,\r\n\t\t\thandlers,\r\n\t\t\tbindEvent\r\n\t\t);\r\n\t\tignoreChildren = ignoreChildren || IGNORE_CHILDREN[key];\r\n\t}\r\n\treturn ignoreChildren;\r\n}\r\n\r\nfunction setProperty(\r\n\tnode,\r\n\tkey,\r\n\tprevValue,\r\n\tnextValue,\r\n\tisSvg,\r\n\thandlers,\r\n\tbindEvent\r\n) {\r\n\tkey = key == \"class\" && !isSvg ? \"className\" : key;\r\n\t// define empty value\r\n\tprevValue = prevValue == null ? null : prevValue;\r\n\tnextValue = nextValue == null ? null : nextValue;\r\n\r\n\tif (key in node && HYDRATE_PROPS[key]) {\r\n\t\tprevValue = node[key];\r\n\t}\r\n\r\n\tif (nextValue === prevValue) return;\r\n\r\n\tif (\r\n\t\tkey[0] == \"o\" &&\r\n\t\tkey[1] == \"n\" &&\r\n\t\t(isFunction(nextValue) || isFunction(prevValue))\r\n\t) {\r\n\t\tsetEvent(node, key, nextValue, handlers, bindEvent);\r\n\t\treturn;\r\n\t}\r\n\r\n\tswitch (key) {\r\n\t\tcase \"ref\":\r\n\t\t\tif (nextValue) nextValue.current = node;\r\n\t\t\tbreak;\r\n\t\tcase \"style\":\r\n\t\t\tsetStyle(node, prevValue || node.style.cssText, nextValue);\r\n\t\t\tbreak;\r\n\t\tcase \"shadowDom\":\r\n\t\t\tif (\"attachShadow\" in node) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t(node.shadowRoot && !nextValue) ||\r\n\t\t\t\t\t(!node.shadowRoot && nextValue)\r\n\t\t\t\t) {\r\n\t\t\t\t\tnode.attachShadow({ mode: nextValue ? \"open\" : \"closed\" });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"key\":\r\n\t\t\tkey = \"data-key\";\r\n\t\t\tif (nextValue == null) {\r\n\t\t\t\tdelete node.dataset.key;\r\n\t\t\t} else {\r\n\t\t\t\tnode.dataset.key = nextValue;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tif (!isSvg && key != \"list\" && key in node) {\r\n\t\t\t\tnode[key] = nextValue == null ? \"\" : nextValue;\r\n\t\t\t} else if (nextValue == null) {\r\n\t\t\t\tnode.removeAttribute(key);\r\n\t\t\t} else {\r\n\t\t\t\tnode.setAttribute(key, nextValue);\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n * @param {import(\"./render\").HTMLNode} node\r\n * @param {string} type\r\n * @param {function} [nextHandler]\r\n * @param {object} handlers\r\n */\r\nfunction setEvent(node, type, nextHandler, handlers, bindEvent) {\r\n\t// memorize the transformation\r\n\tif (!MEMO_EVENT_NAME[type]) {\r\n\t\tMEMO_EVENT_NAME[type] = type.slice(2).toLocaleLowerCase();\r\n\t}\r\n\t// get the name of the event to use\r\n\ttype = MEMO_EVENT_NAME[type];\r\n\t// add handleEvent to handlers\r\n\tif (!handlers.handleEvent) {\r\n\t\t/**\r\n\t\t * {@link https://developer.mozilla.org/es/docs/Web/API/EventTarget/addEventListener#The_value_of_this_within_the_handler}\r\n\t\t **/\r\n\t\thandlers.handleEvent = event => handlers[event.type].call(bindEvent, event);\r\n\t}\r\n\tif (nextHandler) {\r\n\t\t// create the subscriber if it does not exist\r\n\t\tif (!handlers[type]) {\r\n\t\t\tnode.addEventListener(type, handlers);\r\n\t\t}\r\n\t\t// update the associated event\r\n\t\thandlers[type] = nextHandler;\r\n\t} else {\r\n\t\t// \tdelete the associated event\r\n\t\tif (handlers[type]) {\r\n\t\t\tnode.removeEventListener(type, handlers);\r\n\t\t\tdelete handlers[type];\r\n\t\t}\r\n\t}\r\n}\r\n/**\r\n * define style as string inline,this generates less mutation\r\n * to the sun and cleans the previously defined properties.\r\n * @param {import(\"./render\").HTMLNode} node\r\n * @param {(string|object)} prevValue\r\n * @param {(string|object)} nextValue\r\n */\r\nfunction setStyle(node, prevValue, nextValue) {\r\n\tlet prevCss = prevValue,\r\n\t\tnextCss = nextValue;\r\n\tif (typeof nextCss == \"object\") {\r\n\t\tnextCss = \"\";\r\n\t\tfor (let key in nextValue) {\r\n\t\t\tif (!nextValue[key]) continue;\r\n\t\t\t// memorizes the transformations associated with CSS properties\r\n\t\t\tif (!MEMO_CSS_PROPS[key]) {\r\n\t\t\t\tMEMO_CSS_PROPS[key] = key.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n\t\t\t}\r\n\t\t\tnextCss += `${MEMO_CSS_PROPS[key]}:${nextValue[key]};`;\r\n\t\t}\r\n\t}\r\n\tif (prevCss != nextCss) {\r\n\t\tnode.style.cssText = nextCss;\r\n\t}\r\n}\n\n/**\r\n * @type {ComponentSnap}\r\n */\r\nlet CURRENT_COMPONENT;\r\n/**\r\n * @type {number}\r\n */\r\nlet CURRENT_COMPONENT_KEY_HOOK;\r\n/**\r\n * Returns the concurrent component running\r\n * @returns {ComponentSnap}\r\n */\r\nfunction getCurrentComponent() {\r\n\tif (!CURRENT_COMPONENT) {\r\n\t\tthrow new Error(\r\n\t\t\t\"the hooks can only be called from an existing functional component in the diff queue\"\r\n\t\t);\r\n\t}\r\n\treturn CURRENT_COMPONENT;\r\n}\r\n/**\r\n * Create or recover, the current state according to the global index\r\n * associated with the component\r\n * @param {Reducer} [reducer]\r\n * @param {*} state\r\n * @return {Hook};\r\n */\r\nfunction useHook(reducer, state) {\r\n\tlet component = getCurrentComponent().component;\r\n\tlet index = CURRENT_COMPONENT_KEY_HOOK++;\r\n\t/**@type {Hook} */\r\n\tlet hook;\r\n\tlet isCreate;\r\n\r\n\tif (!component.hooks[index]) {\r\n\t\tisCreate = true;\r\n\t\tcomponent.hooks[index] = [\r\n\t\t\tstate,\r\n\t\t\taction => {\r\n\t\t\t\tif (hook[2]) {\r\n\t\t\t\t\thook[0] = hook[2](hook[0], action);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\thook = component.hooks[index];\r\n\thook[2] = reducer;\r\n\tif (isCreate) hook[1]({ type: COMPONENT_CREATE });\r\n\treturn hook;\r\n}\r\n\r\n/**\r\n * dispatches the state of the components to the hooks subscribed to the component\r\n * @param {ComponentSnap[]} components\r\n * @param {Action} action\r\n */\r\nfunction dispatchComponents(components, action) {\r\n\tlet length = components.length;\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tlet component = components[i],\r\n\t\t\thooks = component.hooks,\r\n\t\t\thooksLength = hooks.length;\r\n\t\t// Mark the component as deleted\r\n\t\tif (action.type === COMPONENT_REMOVE) {\r\n\t\t\tcomponent.remove = true;\r\n\t\t}\r\n\t\tfor (let i = 0; i < hooksLength; i++) {\r\n\t\t\t/**@type {Hook} */\r\n\t\t\tlet hook = hooks[i];\r\n\t\t\thook[1](action);\r\n\t\t}\r\n\t}\r\n}\r\n/**\r\n * this function allows creating a block that analyzes the tag\r\n * defined as a function, in turn creates a global update scope for hook management.\r\n * @param {import(\"./render\").ConfigRender} config - name of space to store the components\r\n * @param {boolean} isSvg - inherit svg behavior\r\n */\r\nfunction createComponent(config, isSvg) {\r\n\t/**@type {ComponentSnap[]} */\r\n\tlet components = [];\r\n\t/**@type {Element} */\r\n\tlet host;\r\n\t/**\r\n\t * This function allows reducing the functional components based on\r\n\t * their return, in turn creates a unique state for each component\r\n\t * according to a depth index\r\n\t * @param {Vnode} vnode\r\n\t * @param {Context} context\r\n\t * @param {number} deep - incremental index that defines the position of the component in the store\r\n\t */\r\n\tfunction nextComponent(vnode, deep) {\r\n\t\t// if host does not exist as a node, the vnode is not reduced\r\n\t\tif (!host) return;\r\n\t\tvnode = toVnode(vnode);\r\n\t\t// if it is different from a functional node, it is sent to diff again\r\n\t\tif (!isFunction(vnode.type)) {\r\n\t\t\tdispatchComponents(components.splice(deep), {\r\n\t\t\t\ttype: COMPONENT_REMOVE\r\n\t\t\t});\r\n\t\t\thost = diff(config, host, vnode, isSvg, updateComponent);\r\n\t\t\t// if the components no longer has a length, it is assumed that the updateComponent is no longer necessary\r\n\t\t\tif (components.length) host[config.id].updateComponent = updateComponent;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/**@type {ComponentSnap} */\r\n\t\tlet component = components[deep] || {};\r\n\t\t/**\r\n\t\t * @type {boolean} define whether the component is created or updated\r\n\t\t */\r\n\t\tlet isCreate;\r\n\t\t/**\r\n\t\t * @type {boolean} Define whether the component should continue with the update\r\n\t\t */\r\n\t\tlet withNext;\r\n\r\n\t\tif (component.type != vnode.type) {\r\n\t\t\t// the elimination is sent to the successors of the previous component\r\n\t\t\tdispatchComponents(components.splice(deep), {\r\n\t\t\t\ttype: COMPONENT_REMOVE\r\n\t\t\t});\r\n\t\t\t// stores the state of the component\r\n\t\t\tcomponents[deep] = assign(\r\n\t\t\t\t{\r\n\t\t\t\t\thooks: [],\r\n\t\t\t\t\tref: {\r\n\t\t\t\t\t\tget current() {\r\n\t\t\t\t\t\t\treturn host;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tvnode\r\n\t\t\t);\r\n\t\t\tisCreate = true;\r\n\t\t\twithNext = true;\r\n\t\t}\r\n\r\n\t\tcomponent = components[deep];\r\n\t\t/**@type {Vnode} */\r\n\t\tlet nextProps = vnode.props;\r\n\t\t/**@type {Vnode} */\r\n\t\tlet prevProps = component.props;\r\n\r\n\t\t// Compare previous props with current ones\r\n\t\tif (!withNext) {\r\n\t\t\tlet length = Object.keys(prevProps).length,\r\n\t\t\t\tnextLength = 0;\r\n\t\t\t// compare the lake of properties\r\n\t\t\tfor (let key in nextProps) {\r\n\t\t\t\tnextLength++;\r\n\t\t\t\tif (nextProps[key] != prevProps[key]) {\r\n\t\t\t\t\twithNext = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twithNext = withNext || length != nextLength;\r\n\t\t}\r\n\r\n\t\tcomponent.props = nextProps;\r\n\r\n\t\t/**\r\n\t\t * Create a snapshot of the current component\r\n\t\t */\r\n\t\tfunction next() {\r\n\t\t\tif (component.remove) return host;\r\n\r\n\t\t\tCURRENT_COMPONENT = {\r\n\t\t\t\tcomponent,\r\n\t\t\t\t/**\r\n\t\t\t\t * updates the status of the component, forcing the update of this\r\n\t\t\t\t */\r\n\t\t\t\tnext() {\r\n\t\t\t\t\tif (!component.prevent) {\r\n\t\t\t\t\t\tcomponent.prevent = true;\r\n\t\t\t\t\t\tdefer(() => {\r\n\t\t\t\t\t\t\tcomponent.prevent = false;\r\n\t\t\t\t\t\t\tnext();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tCURRENT_COMPONENT_KEY_HOOK = 0;\r\n\r\n\t\t\tdispatchComponents([component], { type: COMPONENT_UPDATE });\r\n\r\n\t\t\tlet vnextnode = component.type(component.props);\r\n\t\t\t// clean state constants\r\n\t\t\tCURRENT_COMPONENT = false;\r\n\t\t\tCURRENT_COMPONENT_KEY_HOOK = 0;\r\n\r\n\t\t\tnextComponent(vnextnode, deep + 1);\r\n\r\n\t\t\tdispatchComponents([component], {\r\n\t\t\t\ttype: isCreate ? COMPONENT_CREATED : COMPONENT_UPDATED\r\n\t\t\t});\r\n\r\n\t\t\tisCreate = false;\r\n\t\t}\r\n\t\tif (withNext && !component.prevent) next();\r\n\t}\r\n\t/**\r\n\t * allows to control HoCs and optimizes the executions\r\n\t * of the components with the memo pattern\r\n\t * @param {string} type - action to execute\r\n\t * @param {Element} nextHost\r\n\t * @param {Vnode} vnode\r\n\t * @returns {Element}\r\n\t */\r\n\tfunction updateComponent(type, nextHost, vnode) {\r\n\t\tswitch (type) {\r\n\t\t\tcase COMPONENT_UPDATE:\r\n\t\t\t\thost = nextHost;\r\n\t\t\t\tnextComponent(vnode, 0);\r\n\t\t\t\treturn host;\r\n\t\t\tcase COMPONENT_CLEAR:\r\n\t\t\t\tdispatchComponents([].concat(components).reverse(), { type });\r\n\t\t\t\tbreak;\r\n\t\t\tcase COMPONENT_REMOVE:\r\n\t\t\t\thost = false;\r\n\t\t\t\tdispatchComponents(components.reverse(), { type });\r\n\t\t\t\tcomponents = [];\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn updateComponent;\r\n}\r\n\r\n/**\r\n *\r\n * @typedef {{type:string}} Action\r\n *\r\n * @typedef {function(Object,Number):any} sample\r\n *\r\n * @typedef {function(Action):void} Dispatch\r\n *\r\n * @typedef {function(any,Action)} Reducer\r\n *\r\n * @typedef {[ any, Dispatch, Reducer ]} Hook - **[ state, dispatch , reducer ]**;\r\n *\r\n * @typedef {(HTMLElement|SVGElement|Text)} Element\r\n *\r\n * @typedef {import(\"./vnode\").Vnode} Vnode\r\n *\r\n * @typedef {Hook[]} Hooks\r\n *\r\n * @typedef {object} ComponentSnap\r\n * @property {{current:(HTMLElement|SVGElement)}} ref\r\n * @property {boolean} prevent\r\n * @property {Hooks} hooks\r\n * @property {Function} next\r\n * @property {Function} type\r\n * @property {import(\"./vnode\").VnodeProps} props\r\n **/\n\n/**\r\n *\r\n * @param {import(\"./render\").ConfigRender} config\r\n * @param {import(\"./render\").HTMLNode} node\r\n * @param {import(\"./vnode\").Vnode} nextVnode\r\n * @param {boolean} isSvg\r\n * @param {Function} currentUpdateComponent\r\n * @return {import(\"./render\").HTMLNode}\r\n **/\r\nfunction diff(config, node, nextVnode, isSvg, currentUpdateComponent) {\r\n\tlet { vnode, updateComponent, handlers = {} } =\r\n\t\t(node && node[config.id]) || {};\r\n\r\n\tif (vnode == nextVnode) return node;\r\n\r\n\tvnode = vnode || { props: {} };\r\n\r\n\tlet { type, props } = nextVnode,\r\n\t\t{ shadowDom, children } = props,\r\n\t\tisComponent = isFunction(type);\r\n\r\n\tisSvg = isSvg || type == \"svg\";\r\n\tif (isComponent && !updateComponent) {\r\n\t\tupdateComponent = createComponent(config, isSvg);\r\n\t}\r\n\tif (!isComponent && type != NODE_HOST && getNodeName(node) !== type) {\r\n\t\tlet nextNode = createNode(type, isSvg),\r\n\t\t\tparent = node && node.parentNode;\r\n\r\n\t\tif (parent) {\r\n\t\t\tunmount(config, node, true, currentUpdateComponent);\r\n\t\t\tparent.replaceChild(nextNode, node);\r\n\t\t}\r\n\r\n\t\tnode = nextNode;\r\n\t\thandlers = {};\r\n\t}\r\n\tif (updateComponent && currentUpdateComponent != updateComponent) {\r\n\t\treturn updateComponent(COMPONENT_UPDATE, node, nextVnode);\r\n\t} else if (type == null) {\r\n\t\tif (node.nodeValue != children) {\r\n\t\t\tnode.nodeValue = children;\r\n\t\t}\r\n\t} else {\r\n\t\tlet ignoreChildren = diffProps(\r\n\t\t\tnode,\r\n\t\t\tvnode.props,\r\n\t\t\tnextVnode.props,\r\n\t\t\tisSvg,\r\n\t\t\thandlers,\r\n\t\t\tconfig.bind\r\n\t\t);\r\n\t\tif (!ignoreChildren && vnode.props.children != children) {\r\n\t\t\tdiffChildren(\r\n\t\t\t\tconfig,\r\n\t\t\t\tshadowDom ? node.shadowRoot || node : node,\r\n\t\t\t\tchildren,\r\n\t\t\t\tisSvg\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tnode[config.id] = { vnode: nextVnode, handlers };\r\n\treturn node;\r\n}\r\n/**\r\n *\r\n * @param {import(\"./render\").ConfigRender} config\r\n * @param {import(\"./render\").HTMLNode} parent\r\n * @param {import(\"./vnode\").Vnode[]} [nextChildren]\r\n * @param {boolean} isSvg\r\n */\r\nfunction diffChildren(config, parent, nextChildren, isSvg) {\r\n\tlet keyes = [],\r\n\t\tchildren = toList(nextChildren, false, keyes),\r\n\t\tchildrenLenght = children.length;\r\n\r\n\tlet childNodes = parent.childNodes,\r\n\t\tchildNodesKeyes = {},\r\n\t\tchildNodesLength = childNodes.length,\r\n\t\twithKeyes = keyes.withKeyes,\r\n\t\tindex = withKeyes\r\n\t\t\t? 0\r\n\t\t\t: childNodesLength > childrenLenght\r\n\t\t\t? childrenLenght\r\n\t\t\t: childNodesLength;\r\n\tfor (; index < childNodesLength; index++) {\r\n\t\tlet childNode = childNodes[index],\r\n\t\t\tkey = index;\r\n\t\tif (withKeyes) {\r\n\t\t\tkey = childNode.dataset.key;\r\n\t\t\tif (keyes.indexOf(key) > -1) {\r\n\t\t\t\tchildNodesKeyes[key] = childNode;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tunmount(config.id, childNode);\r\n\t\tindex--;\r\n\t\tchildNodesLength--;\r\n\t\tparent.removeChild(childNode);\r\n\t}\r\n\tfor (let i = 0; i < childrenLenght; i++) {\r\n\t\tlet child = children[i],\r\n\t\t\tindexChildNode = childNodes[i],\r\n\t\t\tkey = withKeyes ? child.key : i,\r\n\t\t\tchildNode = withKeyes ? childNodesKeyes[key] : indexChildNode;\r\n\r\n\t\tif (withKeyes && childNode) {\r\n\t\t\tif (childNode != indexChildNode) {\r\n\t\t\t\tparent.insertBefore(childNode, indexChildNode);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet nextChildNode = diff(\r\n\t\t\tconfig,\r\n\t\t\t!childNode && isFunction(child.type) ? createNode(null) : childNode,\r\n\t\t\tchild,\r\n\t\t\tisSvg\r\n\t\t);\r\n\r\n\t\tif (!childNode) {\r\n\t\t\tif (childNodes[i]) {\r\n\t\t\t\tparent.insertBefore(nextChildNode, childNodes[i]);\r\n\t\t\t} else {\r\n\t\t\t\tparent.appendChild(nextChildNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n/**\r\n * Remove the node and issue the deletion if it belongs to a component\r\n * @param {string} id\r\n * @param {import(\"./render\").HTMLNode} node\r\n * @param {boolean} clear\r\n * @param {function} currentUpdateComponent\r\n */\r\nfunction unmount(id, node, clear, currentUpdateComponent) {\r\n\tlet { updateComponent } = node[id] || {},\r\n\t\tchildNodes = node.childNodes,\r\n\t\tlength = childNodes.length;\r\n\tif (updateComponent && updateComponent != currentUpdateComponent) {\r\n\t\tupdateComponent(clear ? COMPONENT_CLEAR : COMPONENT_REMOVE);\r\n\t}\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tunmount(id, childNodes[i]);\r\n\t}\r\n}\r\n/**\r\n *\r\n * @param {string} type\r\n * @param {boolean} isSvg\r\n * @returns {import(\"./render\").HTMLNode}\r\n */\r\nfunction createNode(type, isSvg) {\r\n\tlet doc = document,\r\n\t\tnextNode;\r\n\tif (type != null) {\r\n\t\tnextNode = isSvg\r\n\t\t\t? doc.createElementNS(\"http://www.w3.org/2000/svg\", type)\r\n\t\t\t: doc.createElement(type);\r\n\t} else {\r\n\t\tnextNode = doc.createTextNode(\"\");\r\n\t}\r\n\treturn nextNode;\r\n}\r\n\r\n/**\r\n * returns the localName of the node\r\n * @param {import(\"./render\").HTMLNode} node\r\n */\r\nfunction getNodeName(node) {\r\n\tif (!node) return;\r\n\tif (!node[NODE_TYPE]) {\r\n\t\tnode[NODE_TYPE] = node.nodeName.toLowerCase();\r\n\t}\r\n\tlet localName = node[NODE_TYPE];\r\n\treturn localName == \"#text\" ? null : localName;\r\n}\r\n/**\r\n * generates a flatmap of nodes\r\n * @param {?Array} children\r\n * @param {function} [map]\r\n * @param {string[]} keyes\r\n * @param {import(\"./vnode\").Vnode[]} list\r\n * @param {number} deep\r\n * @returns {import(\"./vnode\").Vnode[]}\r\n */\r\nfunction toList(children, map, keyes, list, deep = 0) {\r\n\tkeyes = keyes || [];\r\n\tlist = list || [];\r\n\r\n\tif (isArray(children)) {\r\n\t\tlet length = children.length;\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\ttoList(children[i], map, keyes, list, deep + 1);\r\n\t\t}\r\n\t} else {\r\n\t\tif (children == null && !deep) return ARRAY_EMPTY;\r\n\t\tlet vnode = map ? map(children, list.length) : toVnode(children);\r\n\t\tif (!map) {\r\n\t\t\tif (typeof vnode == \"object\") {\r\n\t\t\t\tif (vnode.key != null) {\r\n\t\t\t\t\tif (keyes.indexOf(vnode.key) == -1) {\r\n\t\t\t\t\t\tkeyes.push(vnode.key);\r\n\t\t\t\t\t\tkeyes.withKeyes = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlist.push(vnode);\r\n\t}\r\n\treturn list;\r\n}\n\n/**\r\n *\r\n * @param {import(\"./vnode\").Vnode} vnode\r\n * @param {HTMLNode} parent\r\n * @param {Object} [options]\r\n **/\r\nfunction render(vnode, parent, options = OBJECT_EMPTY) {\r\n\t/**@type {ConfigRender}*/\r\n\tlet config = {\r\n\t\tid: options.id || STATE,\r\n\t\tbind: options.bind,\r\n\t\thost: options.host\r\n\t};\r\n\r\n\tvnode = toVnode(vnode);\r\n\r\n\tif (!config.host && vnode.type != NODE_HOST) {\r\n\t\tvnode = createElement(NODE_HOST, {}, vnode);\r\n\t}\r\n\r\n\tdiff(config, parent, vnode);\r\n}\r\n\r\n/**\r\n * @typedef {(HTMLElement|SVGElement|Text)} HTMLNode\r\n *\r\n * @typedef {object} ConfigRender\r\n * @property {string} id - namespace to store the state of the virtual-dom\r\n * @property {any} [bind] - Allows to bin events to a context this\r\n * @property {boolean} [host] - Allows a component to manipulate the main container\r\n **/\n\n/**\r\n * @return {HTMLElement}\r\n */\r\nfunction useHost() {\r\n\treturn getCurrentComponent().component.ref;\r\n}\r\n\r\nfunction useState(initialState) {\r\n\t/**@type {RefUseState} */\r\n\tlet ref = useHook(0, [])[0];\r\n\tif (!ref[1]) {\r\n\t\tlet next = getCurrentComponent().next;\r\n\t\tref.push(\r\n\t\t\tisFunction(initialState) ? initialState() : initialState,\r\n\t\t\tfunction setState(nextState) {\r\n\t\t\t\tref[0] = isFunction(nextState) ? nextState() : nextState;\r\n\t\t\t\tnext();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\treturn ref;\r\n}\r\n\r\nfunction useEffect(callback, args) {\r\n\tuseHook((state, action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase COMPONENT_CREATE:\r\n\t\t\t\treturn { args };\r\n\t\t\tcase COMPONENT_UPDATE:\r\n\t\t\tcase COMPONENT_REMOVE:\r\n\t\t\t\tif (state.clear) {\r\n\t\t\t\t\tlet next =\r\n\t\t\t\t\t\taction.type == COMPONENT_REMOVE ||\r\n\t\t\t\t\t\t(args && state.args ? !isEqualArray(args, state.args) : true);\r\n\t\t\t\t\tif (next) state.clear.then(handler => handler && handler());\r\n\t\t\t\t}\r\n\t\t\t\treturn { args };\r\n\t\t\tcase COMPONENT_CREATED:\r\n\t\t\tcase COMPONENT_UPDATED:\r\n\t\t\t\tlet next =\r\n\t\t\t\t\t\taction.type == COMPONENT_CREATED ||\r\n\t\t\t\t\t\t(args && state.args ? !isEqualArray(args, state.args) : true),\r\n\t\t\t\t\tclear = state.clear;\r\n\t\t\t\tif (next) {\r\n\t\t\t\t\tclear = defer(callback);\r\n\t\t\t\t}\r\n\t\t\t\treturn { clear, args };\r\n\t\t}\r\n\t\treturn state;\r\n\t});\r\n}\r\n\r\nfunction useRef(current) {\r\n\treturn useHook(0, { current })[0];\r\n}\r\n\r\nfunction useMemo(callback, args) {\r\n\tlet ref = useHook(0, [])[0];\r\n\tif (!ref[0] || (ref[0] && !isEqualArray(ref[0], args))) {\r\n\t\tref[1] = callback();\r\n\t}\r\n\tref[0] = args;\r\n\treturn ref[1];\r\n}\r\n\r\nfunction useReducer(reducer, initialState) {\r\n\t/** @type {RefUseReducer} */\r\n\tlet ref = useHook(0, [])[0];\r\n\tif (!ref.current) {\r\n\t\tlet next = getCurrentComponent().next;\r\n\t\tref.push(initialState, action => {\r\n\t\t\tref[0] = ref[2](ref[0], action);\r\n\t\t\tnext();\r\n\t\t});\r\n\t}\r\n\tref[2] = reducer;\r\n\treturn ref;\r\n}\r\n\r\n/**\r\n * @typedef {function(*,*):void} SetState - **setState( nextState )**\r\n *\r\n * @typedef {[*, SetState]} RefUseState - **[state, setState]**\r\n *\r\n * @typedef {[*, import(\"./component\").Dispatch]} RefUseReducer - **[state, dispatch]**\r\n **/\n\nexport { createElement as h, render, toList, useEffect, useHost, useMemo, useReducer, useRef, useState };\n","/**\r\n * Applies JSON.parse to extract the real value of an attribute from a string.\r\n * @param {string} value\r\n * @returns {(boolean|string|number|Object|Array)}\r\n **/\r\nfunction parse(value) {\r\n\treturn JSON.parse(value);\r\n}\r\n\r\nexport default class Element extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/**@type {Object<string,any>} */\r\n\t\tthis.props = {};\r\n\t\t/**@type {Promise} */\r\n\t\tthis.mounted = new Promise(resolve => (this.mount = resolve));\r\n\t\t/**@type {Promise} */\r\n\t\tthis.unmounted = new Promise(resolve => (this.unmount = resolve));\r\n\t}\r\n\tconnectedCallback() {\r\n\t\tthis.mount();\r\n\t}\r\n\tdisconnectedCallback() {\r\n\t\tthis.unmount();\r\n\t}\r\n\tattributeChangedCallback(name, oldValue, value) {\r\n\t\tif (oldValue == value) return;\r\n\t\tthis.setProperty(name, value);\r\n\t}\r\n\tstatic get observedAttributes() {\r\n\t\tlet observables = this.observables || {},\r\n\t\t\tattributes = [],\r\n\t\t\t/**\r\n\t\t\t * @param {string} - add the setter and getter to the constructor prototype\r\n\t\t\t */\r\n\t\t\tproxy = (name, attr, type) => {\r\n\t\t\t\tObject.defineProperty(this.prototype, name, {\r\n\t\t\t\t\tset(value) {\r\n\t\t\t\t\t\t// the attributes of the Boolean type will always be reflected in Element\r\n\t\t\t\t\t\tif (type === Boolean) {\r\n\t\t\t\t\t\t\tlet state = this.hasAttribute(attr);\r\n\t\t\t\t\t\t\tif ((value && state) || (!value && !state)) return;\r\n\t\t\t\t\t\t\tthis[value ? \"setAttribute\" : \"removeAttribute\"](attr, \"\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.setProperty(name, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget() {\r\n\t\t\t\t\t\treturn this.props[name];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\tfor (let key in observables) {\r\n\t\t\tlet attr = key.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n\t\t\tattributes.push(attr);\r\n\t\t\tif (!(name in this.prototype)) proxy(key, attr, observables[key]);\r\n\t\t}\r\n\t\treturn attributes;\r\n\t}\r\n\t/**\r\n\t * validate to `value`, and then deliver it to the` update` method.\r\n\t * @param {name} name\r\n\t * @param {*} value\r\n\t */\r\n\tsetProperty(name, value) {\r\n\t\tname = name.replace(/-(\\w)/g, (all, letter) => letter.toUpperCase());\r\n\t\tlet { observables } = this.constructor,\r\n\t\t\terror,\r\n\t\t\ttype = observables[name];\r\n\t\ttry {\r\n\t\t\tif (typeof value == \"string\") {\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase Boolean:\r\n\t\t\t\t\t\tvalue = parse(value || \"true\") == true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number:\r\n\t\t\t\t\t\tvalue = Number(value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object:\r\n\t\t\t\t\tcase Array:\r\n\t\t\t\t\t\tvalue = parse(value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Function:\r\n\t\t\t\t\t\tvalue = window[value];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\terror = true;\r\n\t\t}\r\n\t\tif (\r\n\t\t\t(!error && {}.toString.call(value) == `[object ${type.name}]`) ||\r\n\t\t\tvalue == null\r\n\t\t) {\r\n\t\t\tif (this.props[name] !== value) this.update({ [name]: value });\r\n\t\t} else {\r\n\t\t\tthrow `the observable [${name}] must be of the type [${type.name}]`;\r\n\t\t}\r\n\t}\r\n}\r\n","import { render, h } from '@atomico/core';\nexport { h } from '@atomico/core';\nimport BaseElement from '@atomico/base-element';\n\nlet cache = {};\r\n\r\nclass Element extends BaseElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/**@type {boolean} */\r\n\t\tlet prevent;\r\n\t\t/**\r\n\t\t * @namespace\r\n\t\t * @property {string} id - identifier to store the state of the virtual-dom\r\n\t\t * @property {HTMLElement} bind - allows bindear events defining as context the same customElement\r\n\t\t * @property {boolean} host - allows to enable control over the main container, in this case the customElement\r\n\t\t */\r\n\t\tlet options = {\r\n\t\t\tid: Symbol(\"state\"),\r\n\t\t\tbind: this,\r\n\t\t\thost: true\r\n\t\t};\r\n\t\t/**\r\n\t\t * add support {@link https://developer.mozilla.org/es/docs/Web/API/CSSStyleSheet}\r\n\t\t */\r\n\t\tlet { styles } = this.constructor;\r\n\t\tthis.render = this.render.bind(this);\r\n\t\tlet nextProps = {};\r\n\t\t/**\r\n\t\t * @param {Object<string,any>} - Properties to update the component\r\n\t\t */\r\n\t\tthis.update = props => {\r\n\t\t\tfor (let key in props) nextProps[key] = props[key];\r\n\t\t\tif (!prevent) {\r\n\t\t\t\tprevent = true;\r\n\t\t\t\tthis.mounted.then(() => {\r\n\t\t\t\t\tlet props = (this.props = { ...this.props });\r\n\t\t\t\t\tfor (let key in nextProps) {\r\n\t\t\t\t\t\tlet value = nextProps[key];\r\n\t\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\t\tdelete props[key];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tprops[key] = nextProps[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextProps = {};\r\n\t\t\t\t\trender(h(this.render, props), this, options);\r\n\t\t\t\t\tprevent = false;\r\n\t\t\t\t\tif (styles && this.shadowRoot) {\r\n\t\t\t\t\t\tthis.shadowRoot.adoptedStyleSheets = styles;\r\n\t\t\t\t\t\tstyles = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.unmounted.then(() => render(\"\", this, options));\r\n\r\n\t\tthis.update();\r\n\t}\r\n}\r\n/**\r\n * @param {Function} component\r\n * @example\r\n * // define a functional component\r\n * function MyWc(props){}\r\n * // define the observables of the component\r\n * MyWc.observables = {value:String}\r\n * // when using the toClass function the functional component will be a class\r\n * customElements.define(\"my-wc\",createClass(MyWc));\r\n */\r\nfunction createClass(component) {\r\n\tlet CustomElement = class extends Element {};\r\n\tCustomElement.prototype.render = component;\r\n\tCustomElement.observables = component.observables;\r\n\tCustomElement.styles = component.styles;\r\n\treturn CustomElement;\r\n}\r\n/**\r\n * register the component, be it a class or function\r\n * @param {string} tagName\r\n * @param {Function} component\r\n * @return {Object} returns a jsx component\r\n */\r\nfunction customElement(tagName, component) {\r\n\tcustomElements.define(\r\n\t\ttagName,\r\n\t\tcomponent instanceof Element ? component : createClass(component)\r\n\t);\r\n\treturn props => h(tagName, props);\r\n}\r\n\r\nfunction css(string) {\r\n\tif (Array.isArray(string)) {\r\n\t\tlet args = arguments;\r\n\t\tstring = string\r\n\t\t\t.map((value, index) => value + (args[index + 1] || \"\"))\r\n\t\t\t.join(\"\");\r\n\t}\r\n\tif (!cache[string]) {\r\n\t\tcache[string] = new CSSStyleSheet();\r\n\t\tcache[string].replace(string);\r\n\t}\r\n\treturn cache[string];\r\n}\n\nexport { Element, createClass, css, customElement };\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { h, customElement } from \"@atomico/element\";\nimport style from \"./style.css\";\n\nlet incrementId = 3;\n/**\n * Input component, shows the input that collects the texts for the creation of a task\n * @param {object} props\n * @param {function} props.handlerChange\n * @param {string} props.placeholder\n * @return {object}\n */\nexport function Input(props) {\n\treturn (\n\t\t<host shadowDom>\n\t\t\t<style>{style}</style>\n\t\t\t<form\n\t\t\t\tonSubmit={event => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif (props.handlerChange)\n\t\t\t\t\t\tprops.handlerChange({\n\t\t\t\t\t\t\ttext: event.target.input.value,\n\t\t\t\t\t\t\tid: incrementId++\n\t\t\t\t\t\t});\n\t\t\t\t\tevent.target.reset();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<input name=\"input\" type=\"text\" placeholder={props.placeholder} />\n\t\t\t</form>\n\t\t</host>\n\t);\n}\n\nInput.observables = {\n\thandlerChange : Function,\n\tplaceholder: String\n}\n\nexport default customElement(\"todo-input\",Input)","import { h, customElement } from \"@atomico/element\";\nimport style from \"./style.css\";\nimport { useEffect } from \"@atomico/core\";\n/**\n * Component article, shows the task and allows you to mark how the\n * elimination(props.handlerRemove) of this has been done(props.handlerToggle) or eliminated\n * @param {object} props\n * @param {integer|string} props.key\n * @param {function} props.handlerToggle\n * @param {boolean} props.checked\n * @param {string} props.text\n * @param {function} props.handlerRemove\n * @return {object}\n */\nexport  function Item(props) {\n\treturn (\n\t\t<host shadowDom key={props.key}>\n\t\t\t<style>{style}</style>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tonChange={props.handlerToggle}\n\t\t\t\tchecked={props.checked}\n\t\t\t/>\n\t\t\t<div class=\"text\">{props.text}</div>\n\t\t\t<button onClick={props.handlerRemove}>x</button>\n\t\t</host>\n\t);\n}\n\nItem.observables = {\n\thandlerToggle : Function,\n\thandlerRemove : Function,\n\tchecked : Boolean,\n\ttext : String,\n}\n\nexport default customElement(\"atomico-todo-item\",Item);","import {useState} from \"@atomico/core\";\nimport {  h,customElement } from \"@atomico/element\";\nimport Input from \"./components/Input\";\nimport Item from \"./components/Item\";\nimport style from \"./style.css\";\n\nfunction Todo(){\n\tlet [state, setState] = useState(() => [\n\t\t{ text: \"my initial todo\", checked: false, id: 1 },\n\t\t{ text: \"Learn about Web Components\", checked: true, id: 2 }\n\t]);\n\treturn (\n\t\t<host shadowDom>\n\t\t\t<style>{style}</style>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"What needs to be done?\"\n\t\t\t\thandlerChange={task => {\n\t\t\t\t\tsetState(state.concat(task));\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t{state.map(({ text, checked, id }, localIndex) => (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\tchecked={checked==true}\n\t\t\t\t\t\thandlerRemove={() => {\n\t\t\t\t\t\t\tsetState(state.filter((data, index) => index !== localIndex));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thandlerToggle={() => {\n\t\t\t\t\t\t\tsetState(\n\t\t\t\t\t\t\t\tstate.map((data, index) =>\n\t\t\t\t\t\t\t\t\tindex === localIndex\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t\t\t\t\t\tchecked: !data.checked\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t: data\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</host>\n\t);\n}\n\ncustomElement(\"my-todo\",Todo);\n"],"names":["createElement","type","props","children","arguments","length","i","push","vnode","key","toVnode","value","ARRAY_EMPTY","OBJECT_EMPTY","STATE","Symbol","NODE_TYPE","NODE_HOST","COMPONENT_CREATE","COMPONENT_UPDATE","COMPONENT_CREATED","COMPONENT_UPDATED","COMPONENT_CLEAR","COMPONENT_REMOVE","IGNORE_PROPS","IGNORE_CHILDREN","innerHTML","textContent","contenteditable","HYDRATE_PROPS","className","id","checked","selected","MEMO_EVENT_NAME","MEMO_CSS_PROPS","CURRENT_COMPONENT","CURRENT_COMPONENT_KEY_HOOK","defer","Promise","prototype","then","bind","resolve","isFunction","setProperty","node","prevValue","nextValue","isSvg","handlers","bindEvent","current","prevCss","nextCss","replace","toLowerCase","style","cssText","setStyle","shadowRoot","attachShadow","mode","dataset","removeAttribute","setAttribute","nextHandler","slice","toLocaleLowerCase","handleEvent","event","call","addEventListener","removeEventListener","setEvent","getCurrentComponent","Error","dispatchComponents","components","action","component","hooks","hooksLength","remove","createComponent","config","host","nextComponent","deep","splice","diff","updateComponent","isCreate","withNext","assign","master","commit","ref","nextProps","prevProps","Object","keys","nextLength","prevent","next","[object Object]","vnextnode","nextHost","concat","reverse","nextVnode","currentUpdateComponent","shadowDom","isComponent","nodeName","localName","getNodeName","nextNode","createNode","parent","parentNode","unmount","replaceChild","nodeValue","ignoreChildren","diffProps","nextChildren","keyes","toList","map","list","Array","isArray","indexOf","withKeyes","childrenLenght","childNodes","childNodesKeyes","childNodesLength","index","childNode","removeChild","child","indexChildNode","insertBefore","nextChildNode","appendChild","diffChildren","clear","doc","document","createElementNS","createTextNode","render","options","useState","initialState","reducer","state","hook","useHook","nextState","parse","JSON","Element","HTMLElement","super","this","mounted","mount","unmounted","name","oldValue","observedAttributes","observables","attributes","proxy","attr","defineProperty","Boolean","hasAttribute","all","letter","toUpperCase","error","constructor","Number","Function","window","e","toString","update","BaseElement","styles","h","adoptedStyleSheets","customElement","tagName","customElements","define","CustomElement","createClass","Input","Item"],"mappings":"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"}