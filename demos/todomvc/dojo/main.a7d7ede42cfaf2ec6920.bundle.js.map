{"version":3,"sources":["webpack://dojo_todo/./node_modules/tslib/tslib.es6.js","webpack://dojo_todo/string.ts","webpack://dojo_todo/object.ts","webpack://dojo_todo/Map.ts","webpack://dojo_todo/WeakMap.ts","webpack://dojo_todo/d.ts","webpack://dojo_todo/Promise.ts","webpack://dojo_todo/Destroyable.ts","webpack://dojo_todo/Evented.ts","webpack://dojo_todo/Registry.ts","webpack://dojo_todo/diff.ts","webpack://dojo_todo/RegistryHandler.ts","webpack://dojo_todo/NodeHandler.ts","webpack://dojo_todo/WidgetBase.ts","webpack://dojo_todo/cssTransitions.ts","webpack://dojo_todo/vdom.ts","webpack://dojo_todo/number.ts","webpack://dojo_todo/array.ts","webpack://dojo_todo/Injector.ts","webpack://dojo_todo/handleDecorator.ts","webpack://dojo_todo/beforeProperties.ts","webpack://dojo_todo/inject.ts","webpack://dojo_todo/diffProperty.ts","webpack://dojo_todo/Themed.ts","webpack://dojo_todo/alwaysRender.ts","webpack://dojo_todo/registerCustomElement.ts","webpack://dojo_todo/customElement.ts","webpack://dojo_todo/watch.ts","webpack://dojo_todo/./src/todo-app/TodoApp.ts","webpack://dojo_todo/./src/todo-input/TodoInput.ts","webpack://dojo_todo/./src/todo-item/TodoItem.ts","webpack://dojo_todo/./src/main.ts","webpack://dojo_todo/./node_modules/tslib/tslib.js","webpack://dojo_todo/./src/todo-app/TodoApp.m.css","webpack://dojo_todo/./src/todo-input/TodoInput.m.css","webpack://dojo_todo/./src/todo-item/TodoItem.m.css"],"names":["Object","setPrototypeOf","Array","assign","__decorate","decorators","target","key","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","fromCodePoint","raw","codePointAt","endsWith","includes","normalize","repeat","startsWith","padEnd","padStart","global","String","util","prototype","object_assign","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","globalObject","Map","shim_Map","WeakMap","shim_WeakMap","WNODE","VNODE","DOMVNODE","isWNode","child","Boolean","type","isVNode","isDomVNode","isElementNode","value","tagName","w","widgetConstructorOrNode","properties","children","widgetConstructor","v","tag","propertiesOrChildren","deferredPropertiesCallback","isArray","classes","styles","newProperties","tslib","_a","nodeClasses","nodeStyles","nodeProperties","originalProperties","d_dom","node","attrs","props","on","diffType","onAttach","toLowerCase","attributes","events","domNode","text","undefined","data","ShimPromise","Promise","has","finally","onFinally","this","then","resolve","reason","shim_Promise","noop","destroyed","Error","Destroyable_Destroyable","[object Object]","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","globString","targetString","regex","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","map","_addListener","listeners","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","_type","Registry_Registry","widgetLabel","emit","action","label","_widgetRegistry","toString","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","widget_core_Registry","isObjectOrArray","reference","previousProperty","newProperty","changed","shallow","validOldProperty","validNewProperty","previousKeys","newKeys","some","auto","result","ignore","NodeEventType","widget_core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","registry","registeredLabels","widget_core_NodeHandler","_nodeMap","element","Widget","Projector","clear","lazyWidgetId","lazyWidgetIdMap","decoratorMap","builtDecoratorMap","widgetInstanceMap","boundAuto","bind","noBind","WidgetBase_WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","dirty","onDetach","nodeHandler","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","changedPropertyKeys","instanceData","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","_bindFunctionProperty","diffFunctions","reactionFunctions","executedReactions","reaction","propertyChanged","reactionRun","nodes","filteredNodes","convertedNodes","id","registryItem","_filterAndConvert","_runBeforeRenders","dNode","_runAfterRenders","decoratorKey","decoratorList","constructor","specificDecoratorList","allDecorators","instanceMap","unshift","getPrototypeOf","buildDecorators","decoratorCache","_buildDecoratorList","property","_bindFunctionPropertyMap","bindInfo","boundFunc","scope","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","isDomMeta","afterConstructors","afterConstructor","pop","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","style","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","addEventListener","cssTransitions","enter","enterAnimation","activeClass","enterAnimationActive","classList","add","requestAnimationFrame","remove","exit","exitAnimation","removeNode","exitAnimationActive","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","isWNodeWrapper","isVNodeWrapper","buildPreviousProperties","current","next","propName","attrName","getAttribute","same","dnode1","dnode2","instance","findIndexOfChild","sameAs","start","createClassPropValue","filter","className","join","trim","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","runEnterAnimation","transitions","runExitAnimation","removeDomNode","parentNode","removeChild","arrayFrom","arr","slice","vdom_renderer","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_applicationQueue","_eventMap","_instanceToWrapperMap","_parentWrapperMap","_wrapperSiblingMap","_insertBeforeMap","_afterRenderCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","callback","evt","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","depth","wrappedRendered","hasParentWNode","hasCurrentParentChildren","childrenWrappers","insertBefore","previousItem","renderedItem","wrapper","order","hasAnimations","nextParent","findParentWNodeWrapper","currentNode","parentWNodeWrapper","parentWrapper","findParentDomNode","parentDomNode","runDeferredProperties","processProperties","findInsertBefore","searchNode","nextSibling","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","split","styleNames","styleCount","j","styleName","newStyleValue","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_runInvalidationQueue","invalidationQueue","previouslyRendered","sort","a","b","sibling","_updateWidget","_runProcessQueue","_runDomInstructionQueue","_runCallbacks","_process","reverse","parentElement","inserted","addRoot","attached","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","dom","_processOne","childNodes","createElementNS","createElement","createTextNode","setDomNodeOnParentWrapper","_createDom","_schedule","__setProperties__","__setChildren__","__render__","_createWidget","updatedTextNode","ownerDocument","replaceChild","_updateDom","wrappers","_removeDom","_removeWidget","mount","mountOptions","wrapNodes","mergedNode","Math","pow","from","of","copyWithin","fill","find","findIndex","array_includes","Injector_Injector","payload","_payload","_invalidator","handleDecorator","handler","propertyKey","descriptor","decorators_handleDecorator","addDecorator","registeredInjectorsMap","inject","name","getProperties","getInjector","registeredInjectors","diffProperty","diffFunction","reactionFunction","THEME_KEY","INJECTED_THEME_KEY","Themed_theme","theme","ThemedMixin","Base","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","_recalculateThemeClasses","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_classes","classNames","extraClass","_registeredBaseTheme","baseThemes","finalBaseTheme","baseTheme","currentClassNames","baseClass","createThemeClassesLookup","themeKey","computed","alwaysRender","CustomElementChildType","registerCustomElement_DomToWidgetWrapper","DomToWidgetWrapper","create","WidgetConstructor","childType","registryFactory","attributeMap","attributeName","HTMLElement","_eventProperties","_initialised","domProperties","_attributesToProperties","filteredPropertyName","_getProperty","_setProperty","_getEventProperty","_setEventProperty","args","dispatchEvent","CustomEvent","bubbles","detail","defineProperties","TEXT","childNode","DOJO","_render","e","_childConnected","widgetProperties","renderChildren","__children__","Wrapper","themeContext","themeRegistry","themeInjector","setInvalidator","registerThemeInjector","_getTheme","_renderer","root","display","getComputedStyle","dojoce","themes","Child","isWidget","__properties__","oldValue","observedAttributes","register","__customElementDescriptor","customElements","decorators_customElement","watch","_value","TodoApp_TodoApp","list","checked","onsubmit","TodoApp_m","todo","index","onremoved","onchecked","todo_app_TodoApp","TodoInput_TodoInput","newtodo","finaltodo","TodoInput_m","onSubmit","preventDefault","stopPropagation","placeholder","oninput","todo_input_TodoInput","TodoItem_TodoItem","onRemoved","onChecked","TodoItem_m","onchange","onclick","todo_item_TodoItem","__WEBPACK_AMD_DEFINE_RESULT__","__extends","__assign","__rest","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","factory","self","createExporter","exports","previous","__esModule","exporter","extendStatics","__proto__","p","__","t","s","n","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","done","apply","f","y","g","_","sent","trys","ops","verb","throw","return","Symbol","iterator","op","TypeError","m","o","ar","concat","asyncIterator","q","resume","fulfill","settle","cooked","module"," _key","listcontainer","newtodoform","completed"],"mappings":"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","file":"main.a7d7ede42cfaf2ec6920.bundle.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","import global from './global';\nimport has from '../has/has';\nimport { wrapNative } from './support/util';\n\nexport interface StringNormalize {\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form: 'NFC' | 'NFD' | 'NFKC' | 'NFKD'): string;\n\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form?: string): string;\n}\n\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n\n/* ES6 static methods */\n\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint: (...codePoints: number[]) => string;\n\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw: (template: TemplateStringsArray, ...substitutions: any[]) => string;\n\n/* ES6 instance methods */\n\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt: (target: string, pos?: number) => number | undefined;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith: (target: string, searchString: string, endPosition?: number) => boolean;\n\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes: (target: string, searchString: string, position?: number) => boolean;\n\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize: StringNormalize;\n\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat: (target: string, count?: number) => string;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith: (target: string, searchString: string, position?: number) => boolean;\n\n/* ES7 instance methods */\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd: (target: string, maxLength: number, fillString?: string) => string;\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart: (target: string, maxLength: number, fillString?: string) => string;\n\nif (has('es6-string') && has('es6-string-raw')) {\n\tfromCodePoint = global.String.fromCodePoint;\n\traw = global.String.raw;\n\n\tcodePointAt = wrapNative(global.String.prototype.codePointAt);\n\tendsWith = wrapNative(global.String.prototype.endsWith);\n\tincludes = wrapNative(global.String.prototype.includes);\n\tnormalize = wrapNative(global.String.prototype.normalize);\n\trepeat = wrapNative(global.String.prototype.repeat);\n\tstartsWith = wrapNative(global.String.prototype.startsWith);\n} else {\n\t/**\n\t * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n\t * Used by startsWith, includes, and endsWith.\n\t *\n\t * @return Normalized position.\n\t */\n\tconst normalizeSubstringArgs = function(\n\t\tname: string,\n\t\ttext: string,\n\t\tsearch: string,\n\t\tposition: number,\n\t\tisEnd: boolean = false\n\t): [string, string, number] {\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.' + name + ' requires a valid string to search against.');\n\t\t}\n\n\t\tconst length = text.length;\n\t\tposition = position !== position ? (isEnd ? length : 0) : position;\n\t\treturn [text, String(search), Math.min(Math.max(position, 0), length)];\n\t};\n\n\tfromCodePoint = function fromCodePoint(...codePoints: number[]): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n\t\tconst length = arguments.length;\n\t\tif (!length) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromCharCode = String.fromCharCode;\n\t\tconst MAX_SIZE = 0x4000;\n\t\tlet codeUnits: number[] = [];\n\t\tlet index = -1;\n\t\tlet result = '';\n\n\t\twhile (++index < length) {\n\t\t\tlet codePoint = Number(arguments[index]);\n\n\t\t\t// Code points must be finite integers within the valid range\n\t\t\tlet isValid =\n\t\t\t\tisFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n\t\t\tif (!isValid) {\n\t\t\t\tthrow RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n\t\t\t}\n\n\t\t\tif (codePoint <= 0xffff) {\n\t\t\t\t// BMP code point\n\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t} else {\n\t\t\t\t// Astral code point; split in surrogate halves\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\tlet highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n\t\t\t\tlet lowSurrogate = (codePoint % 0x400) + LOW_SURROGATE_MIN;\n\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t}\n\n\t\t\tif (index + 1 === length || codeUnits.length > MAX_SIZE) {\n\t\t\t\tresult += fromCharCode.apply(null, codeUnits);\n\t\t\t\tcodeUnits.length = 0;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\traw = function raw(callSite: TemplateStringsArray, ...substitutions: any[]): string {\n\t\tlet rawStrings = callSite.raw;\n\t\tlet result = '';\n\t\tlet numSubstitutions = substitutions.length;\n\n\t\tif (callSite == null || callSite.raw == null) {\n\t\t\tthrow new TypeError('string.raw requires a valid callSite object with a raw value');\n\t\t}\n\n\t\tfor (let i = 0, length = rawStrings.length; i < length; i++) {\n\t\t\tresult += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tcodePointAt = function codePointAt(text: string, position: number = 0): number | undefined {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.codePointAt requries a valid string.');\n\t\t}\n\t\tconst length = text.length;\n\n\t\tif (position !== position) {\n\t\t\tposition = 0;\n\t\t}\n\t\tif (position < 0 || position >= length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Get the first code unit\n\t\tconst first = text.charCodeAt(position);\n\t\tif (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n\t\t\t// Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\tconst second = text.charCodeAt(position + 1);\n\t\t\tif (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n\t\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n\t\t\t}\n\t\t}\n\t\treturn first;\n\t};\n\n\tendsWith = function endsWith(text: string, search: string, endPosition?: number): boolean {\n\t\tif (search === '') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (typeof endPosition === 'undefined') {\n\t\t\tendPosition = text.length;\n\t\t} else if (endPosition === null || isNaN(endPosition)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t[text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n\n\t\tconst start = endPosition - search.length;\n\t\tif (start < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(start, endPosition) === search;\n\t};\n\n\tincludes = function includes(text: string, search: string, position: number = 0): boolean {\n\t\t[text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n\t\treturn text.indexOf(search, position) !== -1;\n\t};\n\n\trepeat = function repeat(text: string, count: number = 0): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\t\tif (count !== count) {\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count < 0 || count === Infinity) {\n\t\t\tthrow new RangeError('string.repeat requires a non-negative finite count.');\n\t\t}\n\n\t\tlet result = '';\n\t\twhile (count) {\n\t\t\tif (count % 2) {\n\t\t\t\tresult += text;\n\t\t\t}\n\t\t\tif (count > 1) {\n\t\t\t\ttext += text;\n\t\t\t}\n\t\t\tcount >>= 1;\n\t\t}\n\t\treturn result;\n\t};\n\n\tstartsWith = function startsWith(text: string, search: string, position: number = 0): boolean {\n\t\tsearch = String(search);\n\t\t[text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n\n\t\tconst end = position + search.length;\n\t\tif (end > text.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(position, end) === search;\n\t};\n}\n\nif (has('es2017-string')) {\n\tpadEnd = wrapNative(global.String.prototype.padEnd);\n\tpadStart = wrapNative(global.String.prototype.padStart);\n} else {\n\tpadEnd = function padEnd(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padEnd requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText +=\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length);\n\t\t}\n\n\t\treturn strText;\n\t};\n\n\tpadStart = function padStart(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padStart requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText =\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length) +\n\t\t\t\tstrText;\n\t\t}\n\n\t\treturn strText;\n\t};\n}\n","import global from './global';\nimport has from '../has/has';\nimport { isSymbol } from './Symbol';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (has('es6-object')) {\n\tconst globalObject = global.Object;\n\tassign = globalObject.assign;\n\tgetOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n\tgetOwnPropertyNames = globalObject.getOwnPropertyNames;\n\tgetOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n\tis = globalObject.is;\n\tkeys = globalObject.keys;\n} else {\n\tkeys = function symbolAwareKeys(o: object): string[] {\n\t\treturn Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tassign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tgetOwnPropertyDescriptor = function<T, K extends keyof T>(o: T, prop: K): PropertyDescriptor | undefined {\n\t\tif (isSymbol(prop)) {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t} else {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t}\n\t};\n\n\tgetOwnPropertyNames = function getOwnPropertyNames(o: any): string[] {\n\t\treturn Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tgetOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn Object.getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tis = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (has('es2017-object')) {\n\tconst globalObject = global.Object;\n\tgetOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n\tentries = globalObject.entries;\n\tvalues = globalObject.values;\n} else {\n\tgetOwnPropertyDescriptors = function getOwnPropertyDescriptors(o: any) {\n\t\treturn getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [key: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tentries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tvalues = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n","import { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import global from './global';\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import {\n\tConstructor,\n\tDefaultWidgetBaseInterface,\n\tDeferredVirtualProperties,\n\tDNode,\n\tVNode,\n\tRegistryLabel,\n\tVNodeProperties,\n\tWidgetBaseInterface,\n\tWNode,\n\tDomOptions,\n\tRenderResult,\n\tDomVNode,\n\tLazyWidget,\n\tLazyDefine\n} from './interfaces';\n\n/**\n * The identifier for a WNode type\n */\nexport const WNODE = '__WNODE_TYPE';\n\n/**\n * The identifier for a VNode type\n */\nexport const VNODE = '__VNODE_TYPE';\n\n/**\n * The identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = '__DOMVNODE_TYPE';\n\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode<W extends WidgetBaseInterface = DefaultWidgetBaseInterface>(\n\tchild: DNode<W> | any\n): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\n/**\n * Interface for the decorate modifier\n */\nexport interface Modifier<T extends DNode> {\n\t(dNode: T, breaker: () => void): void;\n}\n\n/**\n * The predicate function for decorate\n */\nexport interface Predicate<T extends DNode> {\n\t(dNode: DNode): dNode is T;\n}\n\n/**\n * Decorator options\n */\nexport interface DecorateOptions<T extends DNode> {\n\tmodifier: Modifier<T>;\n\tpredicate?: Predicate<T>;\n\tshallow?: boolean;\n}\n\n/**\n * Generic decorate function for DNodes. The nodes are modified in place based on the provided predicate\n * and modifier functions.\n *\n * The children of each node are flattened and added to the array for decoration.\n *\n * If no predicate is supplied then the modifier will be executed on all nodes. A `breaker` function is passed to the\n * modifier which will drain the nodes array and exit the decoration.\n *\n * When the `shallow` options is set to `true` the only the top node or nodes will be decorated (only supported using\n * `DecorateOptions`).\n */\nexport function decorate<T extends DNode>(dNodes: DNode, options: DecorateOptions<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], options: DecorateOptions<T>): DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode | DNode[], options: DecorateOptions<T>): DNode | DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode, modifier: Modifier<T>, predicate: Predicate<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], modifier: Modifier<T>, predicate: Predicate<T>): DNode[];\nexport function decorate<T extends DNode>(\n\tdNodes: RenderResult,\n\tmodifier: Modifier<T>,\n\tpredicate: Predicate<T>\n): RenderResult;\nexport function decorate(dNodes: DNode, modifier: Modifier<DNode>): DNode;\nexport function decorate(dNodes: DNode[], modifier: Modifier<DNode>): DNode[];\nexport function decorate(dNodes: RenderResult, modifier: Modifier<DNode>): RenderResult;\nexport function decorate(\n\tdNodes: DNode | DNode[],\n\toptionsOrModifier: Modifier<DNode> | DecorateOptions<DNode>,\n\tpredicate?: Predicate<DNode>\n): DNode | DNode[] {\n\tlet shallow = false;\n\tlet modifier;\n\tif (typeof optionsOrModifier === 'function') {\n\t\tmodifier = optionsOrModifier;\n\t} else {\n\t\tmodifier = optionsOrModifier.modifier;\n\t\tpredicate = optionsOrModifier.predicate;\n\t\tshallow = optionsOrModifier.shallow || false;\n\t}\n\n\tlet nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n\tfunction breaker() {\n\t\tnodes = [];\n\t}\n\twhile (nodes.length) {\n\t\tconst node = nodes.shift();\n\t\tif (node && node !== true) {\n\t\t\tif (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t}\n\t\t\tif (!predicate || predicate(node)) {\n\t\t\t\tmodifier(node, breaker);\n\t\t\t}\n\t\t}\n\t}\n\treturn dNodes;\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseInterface>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructorOrNode: Constructor<W> | RegistryLabel | WNode<W> | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNode(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\toriginalProperties: {},\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n","import { Thenable } from './interfaces';\nimport global from './global';\nimport { queueMicroTask } from './support/queue';\nimport { Iterable } from './iterator';\nimport './Symbol';\nimport has from '../has/has';\n\n/**\n * Executor is the interface for functions used to initialize a Promise.\n */\nexport interface Executor<T> {\n\t/**\n\t * The executor for the promise\n\t *\n\t * @param resolve The resolver callback of the promise\n\t * @param reject The rejector callback of the promise\n\t */\n\t(resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void): void;\n}\n\ndeclare global {\n\tinterface Promise<T> {\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T>;\n\t}\n}\n\nexport let ShimPromise: typeof Promise = global.Promise;\n\nexport const isThenable = function isThenable<T>(value: any): value is PromiseLike<T> {\n\treturn value && typeof value.then === 'function';\n};\n\nif (!has('es6-promise')) {\n\tconst enum State {\n\t\tFulfilled,\n\t\tPending,\n\t\tRejected\n\t}\n\n\tglobal.Promise = ShimPromise = class Promise<T> implements Thenable<T> {\n\t\tstatic all(iterable: Iterable<any | PromiseLike<any>> | (any | PromiseLike<any>)[]): Promise<any> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\tconst values: any[] = [];\n\t\t\t\tlet complete = 0;\n\t\t\t\tlet total = 0;\n\t\t\t\tlet populating = true;\n\n\t\t\t\tfunction fulfill(index: number, value: any): void {\n\t\t\t\t\tvalues[index] = value;\n\t\t\t\t\t++complete;\n\t\t\t\t\tfinish();\n\t\t\t\t}\n\n\t\t\t\tfunction finish(): void {\n\t\t\t\t\tif (populating || complete < total) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(values);\n\t\t\t\t}\n\n\t\t\t\tfunction processItem(index: number, item: any): void {\n\t\t\t\t\t++total;\n\t\t\t\t\tif (isThenable(item)) {\n\t\t\t\t\t\t// If an item Promise rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(fulfill.bind(null, index), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(fulfill.bind(null, index));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\tprocessItem(i, value);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tpopulating = false;\n\n\t\t\t\tfinish();\n\t\t\t});\n\t\t}\n\n\t\tstatic race<T>(iterable: Iterable<T | PromiseLike<T>> | (T | PromiseLike<T>)[]): Promise<T[]> {\n\t\t\treturn new this(function(resolve: (value?: any) => void, reject) {\n\t\t\t\tfor (const item of iterable) {\n\t\t\t\t\tif (item instanceof Promise) {\n\t\t\t\t\t\t// If a Promise item rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(resolve, reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(resolve);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tstatic reject(reason?: any): Promise<never> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\treject(reason);\n\t\t\t});\n\t\t}\n\n\t\tstatic resolve(): Promise<void>;\n\t\tstatic resolve<T>(value: T | PromiseLike<T>): Promise<T>;\n\t\tstatic resolve<T>(value?: any): Promise<T> {\n\t\t\treturn new this(function(resolve) {\n\t\t\t\tresolve(<T>value);\n\t\t\t});\n\t\t}\n\n\t\tstatic [Symbol.species]: PromiseConstructor = ShimPromise as PromiseConstructor;\n\n\t\t/**\n\t\t * Creates a new Promise.\n\t\t *\n\t\t * @constructor\n\t\t *\n\t\t * @param executor\n\t\t * The executor function is called immediately when the Promise is instantiated. It is responsible for\n\t\t * starting the asynchronous operation when it is invoked.\n\t\t *\n\t\t * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n\t\t * successfully, or the `reject` function when the operation fails.\n\t\t */\n\t\tconstructor(executor: Executor<T>) {\n\t\t\t/**\n\t\t\t * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n\t\t\t */\n\t\t\tlet isChained = false;\n\n\t\t\t/**\n\t\t\t * Whether or not this promise is in a resolved state.\n\t\t\t */\n\t\t\tconst isResolved = (): boolean => {\n\t\t\t\treturn this.state !== State.Pending || isChained;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Callbacks that should be invoked once the asynchronous operation has completed.\n\t\t\t */\n\t\t\tlet callbacks: null | (Array<() => void>) = [];\n\n\t\t\t/**\n\t\t\t * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n\t\t\t * enqueues callbacks for execution on the next event loop turn.\n\t\t\t */\n\t\t\tlet whenFinished = function(callback: () => void): void {\n\t\t\t\tif (callbacks) {\n\t\t\t\t\tcallbacks.push(callback);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Settles this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst settle = (newState: State, value: any): void => {\n\t\t\t\t// A promise can only be settled once.\n\t\t\t\tif (this.state !== State.Pending) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.state = newState;\n\t\t\t\tthis.resolvedValue = value;\n\t\t\t\twhenFinished = queueMicroTask;\n\n\t\t\t\t// Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n\t\t\t\t// wait an extra turn.\n\t\t\t\tif (callbacks && callbacks.length > 0) {\n\t\t\t\t\tqueueMicroTask(function(): void {\n\t\t\t\t\t\tif (callbacks) {\n\t\t\t\t\t\t\tlet count = callbacks.length;\n\t\t\t\t\t\t\tfor (let i = 0; i < count; ++i) {\n\t\t\t\t\t\t\t\tcallbacks[i].call(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallbacks = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Resolves this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst resolve = (newState: State, value: any): void => {\n\t\t\t\tif (isResolved()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isThenable(value)) {\n\t\t\t\t\tvalue.then(settle.bind(null, State.Fulfilled), settle.bind(null, State.Rejected));\n\t\t\t\t\tisChained = true;\n\t\t\t\t} else {\n\t\t\t\t\tsettle(newState, value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.then = <TResult1 = T, TResult2 = never>(\n\t\t\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\t\tonRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t\t): Promise<TResult1 | TResult2> => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t// whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n\t\t\t\t\t// promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n\t\t\t\t\t// event loop.\n\t\t\t\t\twhenFinished(() => {\n\t\t\t\t\t\tconst callback: ((value?: any) => any) | undefined | null =\n\t\t\t\t\t\t\tthis.state === State.Rejected ? onRejected : onFulfilled;\n\n\t\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresolve(callback(this.resolvedValue));\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.state === State.Rejected) {\n\t\t\t\t\t\t\treject(this.resolvedValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(this.resolvedValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\texecutor(resolve.bind(null, State.Fulfilled), resolve.bind(null, State.Rejected));\n\t\t\t} catch (error) {\n\t\t\t\tsettle(State.Rejected, error);\n\t\t\t}\n\t\t}\n\n\t\tcatch<TResult = never>(\n\t\t\tonRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n\t\t): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, onRejected);\n\t\t}\n\n\t\t/**\n\t\t * The current state of this promise.\n\t\t */\n\t\tprivate state = State.Pending;\n\n\t\t/**\n\t\t * The resolved value for this promise.\n\t\t *\n\t\t * @type {T|any}\n\t\t */\n\t\tprivate resolvedValue: any;\n\n\t\tthen: <TResult1 = T, TResult2 = never>(\n\t\t\tonfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\tonrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t) => Promise<TResult1 | TResult2>;\n\n\t\t[Symbol.toStringTag]: 'Promise' = 'Promise';\n\t} as any;\n\t// this cast is needed in order to omit finally in the class declaration; this was done so the finally code\n\t// is not duplicated and always added in the conditional below\n}\n\nif (!has('es2018-promise-finally')) {\n\tglobal.Promise.prototype.finally = function<T>(\n\t\tthis: Promise<T>,\n\t\tonFinally: (() => any) | undefined | null\n\t): Promise<any> {\n\t\treturn this.then(\n\t\t\tonFinally && ((value: T) => Promise.resolve(onFinally()).then(() => value)),\n\t\t\tonFinally &&\n\t\t\t\t((reason: any) =>\n\t\t\t\t\tPromise.resolve(onFinally()).then(() => {\n\t\t\t\t\t\tthrow reason;\n\t\t\t\t\t}))\n\t\t);\n\t};\n}\n\nexport default ShimPromise;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| Promise<WidgetBaseConstructor>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetConstructorDefaultExport<T>(item: any): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\tisWidgetBaseConstructor(item.default)\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(widgetLabel: RegistryLabel, item: WidgetBaseConstructor | InjectorItem): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidgetBaseConstructor<T>(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry?: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import { Evented, EventObject } from '../core/Evented';\nimport Map from '../shim/Map';\nimport { NodeHandlerInterface } from './interfaces';\n\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport enum NodeEventType {\n\tProjector = 'Projector',\n\tWidget = 'Widget'\n}\n\nexport type NodeHandlerEventMap = {\n\tProjector: EventObject<NodeEventType.Projector>;\n\tWidget: EventObject<NodeEventType.Widget>;\n};\n\nexport class NodeHandler extends Evented<NodeHandlerEventMap> implements NodeHandlerInterface {\n\tprivate _nodeMap = new Map<string, Element>();\n\n\tpublic get(key: string): Element | undefined {\n\t\treturn this._nodeMap.get(key);\n\t}\n\n\tpublic has(key: string): boolean {\n\t\treturn this._nodeMap.has(key);\n\t}\n\n\tpublic add(element: Element, key: string): void {\n\t\tthis._nodeMap.set(key, element);\n\t\tthis.emit({ type: key });\n\t}\n\n\tpublic addRoot(): void {\n\t\tthis.emit({ type: NodeEventType.Widget });\n\t}\n\n\tpublic addProjector(): void {\n\t\tthis.emit({ type: NodeEventType.Projector });\n\t}\n\n\tpublic clear(): void {\n\t\tthis._nodeMap.clear();\n\t}\n}\n\nexport default NodeHandler;\n","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { v, VNODE, isVNode, isWNode } from './d';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tDiffPropertyReaction,\n\tDNode,\n\tDefaultWidgetBaseInterface,\n\tLazyWidget,\n\tRender,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tWNode,\n\tVNode,\n\tLazyDefine,\n\tMetaBase\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nimport { Handle } from '../core/Destroyable';\nimport { Base } from './meta/Base';\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nlet lazyWidgetId = 0;\nconst lazyWidgetIdMap = new WeakMap<LazyWidget, string>();\nconst decoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst builtDecoratorMap = new WeakMap<Function, Map<string, any[]>>();\nexport const widgetInstanceMap = new WeakMap<\n\tWidgetBase<WidgetProperties, DNode<DefaultWidgetBaseInterface>>,\n\tWidgetData\n>();\nconst boundAuto = auto.bind(null);\n\nexport const noBind = '__dojo_no_bind';\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine {\n\treturn Boolean(item && item.label);\n}\n\nfunction isDomMeta(meta: any): meta is Base {\n\treturn Boolean(meta.afterRender);\n}\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler | undefined;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, BoundFunctionData> | undefined;\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, MetaBase> | undefined;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\tprivate _handles: Handle[] = [];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = {} as P;\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis.destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\trendering: false,\n\t\t\tinputProperties: {}\n\t\t});\n\n\t\tthis.own({\n\t\t\tdestroy: () => {\n\t\t\t\twidgetInstanceMap.delete(this);\n\t\t\t\tthis._nodeHandler.clear();\n\t\t\t\tthis._nodeHandler.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, MetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis.own(cached);\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties'], bind?: WidgetBaseInterface): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.inputProperties = originalProperties;\n\t\t}\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\t\t\t\tconst executedReactions: Function[] = [];\n\t\t\t\treactionFunctions.forEach(({ reaction, propertyName }) => {\n\t\t\t\t\tconst propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n\t\t\t\t\tconst reactionRun = executedReactions.indexOf(reaction) !== -1;\n\t\t\t\t\tif (propertyChanged && !reactionRun) {\n\t\t\t\t\t\treaction.call(this, this._properties, diffPropertyResults);\n\t\t\t\t\t\texecutedReactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate _filterAndConvert(nodes: DNode[]): (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode): WNode | VNode;\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst isArray = Array.isArray(nodes);\n\t\tconst filteredNodes = Array.isArray(nodes) ? nodes : [nodes];\n\t\tconst convertedNodes: (WNode | VNode)[] = [];\n\t\tfor (let i = 0; i < filteredNodes.length; i++) {\n\t\t\tconst node = filteredNodes[i];\n\t\t\tif (!node || node === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof node === 'string') {\n\t\t\t\tconvertedNodes.push(toTextVNode(node));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isVNode(node) && node.deferredPropertiesCallback) {\n\t\t\t\tconst properties = node.deferredPropertiesCallback(false);\n\t\t\t\tnode.originalProperties = node.properties;\n\t\t\t\tnode.properties = { ...properties, ...node.properties };\n\t\t\t}\n\t\t\tif (isWNode(node) && !isWidgetBaseConstructor(node.widgetConstructor)) {\n\t\t\t\tif (typeof node.widgetConstructor === 'function') {\n\t\t\t\t\tlet id = lazyWidgetIdMap.get(node.widgetConstructor);\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\tid = `__lazy_widget_${lazyWidgetId++}`;\n\t\t\t\t\t\tlazyWidgetIdMap.set(node.widgetConstructor, id);\n\t\t\t\t\t\tthis.registry.define(id, node.widgetConstructor);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = id;\n\t\t\t\t} else if (isLazyDefine(node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = node.widgetConstructor;\n\t\t\t\t\tif (!this.registry.has(label)) {\n\t\t\t\t\t\tthis.registry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = label;\n\t\t\t\t}\n\n\t\t\t\tnode.widgetConstructor =\n\t\t\t\t\tthis.registry.get<WidgetBase>(node.widgetConstructor) || node.widgetConstructor;\n\t\t\t}\n\t\t\tif (!node.bind) {\n\t\t\t\tnode.bind = this;\n\t\t\t}\n\t\t\tconvertedNodes.push(node);\n\t\t\tif (node.children && node.children.length) {\n\t\t\t\tnode.children = this._filterAndConvert(node.children);\n\t\t\t}\n\t\t}\n\t\treturn isArray ? convertedNodes : convertedNodes[0];\n\t}\n\n\tpublic __render__(): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.dirty = false;\n\t\t}\n\t\tconst render = this._runBeforeRenders();\n\t\tconst dNode = this._filterAndConvert(this._runAfterRenders(render()));\n\t\tthis._nodeHandler.clear();\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData && instanceData.invalidate) {\n\t\t\tinstanceData.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\tconst buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n\t\tbuildDecorators.set(decoratorKey, allDecorators);\n\t\tbuiltDecoratorMap.set(this.constructor, buildDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet decoratorCache = builtDecoratorMap.get(this.constructor);\n\t\tlet allDecorators =\n\t\t\tthis._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tallDecorators = [...allDecorators];\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperty(property: any, bind: any): any {\n\t\tif (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n\t\t\tif (this._bindFunctionPropertyMap === undefined) {\n\t\t\t\tthis._bindFunctionPropertyMap = new WeakMap<\n\t\t\t\t\t(...args: any[]) => any,\n\t\t\t\t\t{ boundFunc: (...args: any[]) => any; scope: any }\n\t\t\t\t>();\n\t\t\t}\n\t\t\tconst bindInfo: Partial<BoundFunctionData> = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\tif (boundFunc === undefined || scope !== bind) {\n\t\t\t\tboundFunc = property.bind(bind) as (...args: any[]) => any;\n\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t}\n\t\t\treturn boundFunc;\n\t\t}\n\t\treturn property;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\tif (this._registry === undefined) {\n\t\t\tthis._registry = new RegistryHandler();\n\t\t\tthis.own(this._registry);\n\t\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\t\t}\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\tdNode = afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tisDomMeta(meta) && meta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n\n\tprotected own(handle: Handle): void {\n\t\tthis._handles.push(handle);\n\t}\n\n\tprotected destroy() {\n\t\twhile (this._handles.length > 0) {\n\t\t\tconst handle = this._handles.pop();\n\t\t\tif (handle) {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n","import { VNodeProperties } from './../interfaces';\n\nlet browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\n\nfunction determineBrowserStyleNames(element: HTMLElement) {\n\tif ('WebkitTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n\t\tbrowserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n\t} else if ('transition' in element.style || 'MozTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'transitionend';\n\t\tbrowserSpecificAnimationEndEventName = 'animationend';\n\t} else {\n\t\tthrow new Error('Your browser is not supported');\n\t}\n}\n\nfunction initialize(element: HTMLElement) {\n\tif (browserSpecificAnimationEndEventName === '') {\n\t\tdetermineBrowserStyleNames(element);\n\t}\n}\n\nfunction runAndCleanUp(element: HTMLElement, startAnimation: () => void, finishAnimation: () => void) {\n\tinitialize(element);\n\n\tlet finished = false;\n\n\tlet transitionEnd = function() {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\t\t\telement.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n\t\t\telement.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\n\t\t\tfinishAnimation();\n\t\t}\n\t};\n\n\tstartAnimation();\n\n\telement.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\telement.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\n\nfunction exit(node: HTMLElement, properties: VNodeProperties, exitAnimation: string, removeNode: () => void) {\n\tconst activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(exitAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tremoveNode();\n\t\t}\n\t);\n}\n\nfunction enter(node: HTMLElement, properties: VNodeProperties, enterAnimation: string) {\n\tconst activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(enterAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tnode.classList.remove(enterAnimation);\n\t\t\tnode.classList.remove(activeClass);\n\t\t}\n\t);\n}\n\nexport default {\n\tenter,\n\texit\n};\n","import global from '../shim/global';\nimport has from '../has/has';\nimport { WeakMap } from '../shim/WeakMap';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tWidgetBaseConstructor,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode\n} from './interfaces';\nimport transitionStrategy from './animations/cssTransitions';\nimport { isVNode, isWNode, WNODE, v, isDomVNode, w } from './d';\nimport { Registry, isWidgetBaseConstructor } from './Registry';\nimport { WidgetBase, widgetInstanceMap } from './WidgetBase';\n\nexport interface BaseNodeWrapper {\n\tnode: WNode | VNode;\n\tdomNode?: Node;\n\tchildrenWrappers?: DNodeWrapper[];\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode;\n\tinstance?: WidgetBase;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tdecoratedDeferredProperties?: VNodeProperties;\n\tinserted?: boolean;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry | null;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tinstance: WidgetBase;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tinstance: WidgetBase;\n\tattached: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| AttachApplication\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper, next: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn { properties: {}, attributes: current.node.attributes ? {} : undefined, events: current.node.events };\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tif (dnode1.instance === undefined && typeof dnode2.node.widgetConstructor === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.widgetConstructor !== dnode2.node.widgetConstructor) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tclasses = Array.isArray(classes) ? classes : [classes];\n\treturn classes\n\t\t.filter((className) => className && className !== true)\n\t\t.join(' ')\n\t\t.trim();\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction runEnterAnimation(next: VNodeWrapper, transitions: TransitionStrategy) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties },\n\t\tnode: {\n\t\t\tproperties: { enterAnimation }\n\t\t}\n\t} = next;\n\tif (enterAnimation && enterAnimation !== true) {\n\t\tif (typeof enterAnimation === 'function') {\n\t\t\treturn enterAnimation(domNode as Element, properties);\n\t\t}\n\t\ttransitions.enter(domNode as Element, properties, enterAnimation);\n\t}\n}\n\nfunction runExitAnimation(current: VNodeWrapper, transitions: TransitionStrategy, exitAnimation: string | Function) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties }\n\t} = current;\n\tconst removeDomNode = () => {\n\t\tdomNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n\t\tcurrent.domNode = undefined;\n\t};\n\tif (typeof exitAnimation === 'function') {\n\t\treturn exitAnimation(domNode as Element, removeDomNode, properties);\n\t}\n\ttransitions.exit(domNode as Element, properties, exitAnimation, removeDomNode);\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction wrapNodes(renderer: () => DNode) {\n\treturn class extends WidgetBase {\n\t\tpublic isWNodeWrapper = true;\n\n\t\tprotected render() {\n\t\t\tconst result = renderer();\n\t\t\tthis.isWNodeWrapper = isWNode(result);\n\t\t\treturn result;\n\t\t}\n\t};\n}\n\nexport function renderer(renderer: () => WNode | VNode): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: transitionStrategy,\n\t\tdomNode: global.document.body,\n\t\tregistry: null\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _instanceToWrapperMap = new WeakMap<WidgetBase, WNodeWrapper>();\n\tlet _parentWrapperMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _renderScheduled: number | undefined;\n\tlet _afterRenderCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: Function,\n\t\tbind: any,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tdomNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue.bind(bind);\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t}.bind(bind);\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst currentParentChildren = (isVNodeWrapper(currentParent) && currentParent.childrenWrappers) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && hasParentWNode) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tconst renderedItem = rendered[i];\n\t\t\tconst wrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem) && renderedItem.properties.exitAnimation) {\n\t\t\t\tparent.hasAnimations = true;\n\t\t\t\tlet nextParent = _parentWrapperMap.get(parent);\n\t\t\t\twhile (nextParent) {\n\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\tnextParent = _parentWrapperMap.get(nextParent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_parentWrapperMap.set(wrapper, parent);\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentWNodeWrapper(currentNode: DNodeWrapper): WNodeWrapper | undefined {\n\t\tlet parentWNodeWrapper: WNodeWrapper | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentWNodeWrapper && parentWrapper) {\n\t\t\tif (!parentWNodeWrapper && isWNodeWrapper(parentWrapper)) {\n\t\t\t\tparentWNodeWrapper = parentWrapper;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentWNodeWrapper;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (!parentDomNode && isVNodeWrapper(parentWrapper) && parentWrapper.domNode) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tif (next.node.deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\tnext.node.properties = { ...next.node.deferredPropertiesCallback(true), ...next.node.originalProperties };\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tprocessProperties(next, { properties });\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tif (isVNodeWrapper(nextSibling)) {\n\t\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsearchNode = nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = _parentWrapperMap.get(searchNode);\n\t\t\tif (!searchNode || isVNodeWrapper(searchNode)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst propNames = Object.keys(nextWrapper.node.properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, nextWrapper.node.properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = nextWrapper.node.properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, nextWrapper.node.bind, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _afterRenderCallbacks;\n\t\t_afterRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tevent,\n\t\t\t\t\tevents[event],\n\t\t\t\t\tnext.node.bind,\n\t\t\t\t\tpreviousProperties.events[event]\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = w(wrapNodes(renderer), {});\n\t\tconst nextWrapper = {\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1\n\t\t};\n\t\t_parentWrapperMap.set(nextWrapper, { depth: 0, order: 0, domNode, node: v('fake') });\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\tlet mergedNode: Node | undefined;\n\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_mountOptions.merge = false;\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tconst invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { instance } = item;\n\t\t\tif (previouslyRendered.indexOf(instance) === -1 && _instanceToWrapperMap.has(instance!)) {\n\t\t\t\tpreviouslyRendered.push(instance);\n\t\t\t\tconst current = _instanceToWrapperMap.get(instance)!;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tconst parent = _parentWrapperMap.get(current);\n\t\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\t\tconst { constructor, children } = instance;\n\t\t\t\tconst next = {\n\t\t\t\t\tnode: {\n\t\t\t\t\t\ttype: WNODE,\n\t\t\t\t\t\twidgetConstructor: constructor as WidgetBaseConstructor,\n\t\t\t\t\t\tproperties: instanceData.inputProperties,\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\tbind: current.node.bind\n\t\t\t\t\t},\n\t\t\t\t\tinstance,\n\t\t\t\t\tdepth: current.depth,\n\t\t\t\t\torder: current.order\n\t\t\t\t};\n\n\t\t\t\tparent && _parentWrapperMap.set(next, parent);\n\t\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\t\tconst { item } = _updateWidget({ current, next });\n\t\t\t\tif (item) {\n\t\t\t\t\t_processQueue.push(item);\n\t\t\t\t\tinstance && _instanceToWrapperMap.set(instance, next);\n\t\t\t\t\t_runProcessQueue();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\t_applicationQueue.push(item);\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: {\n\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\tmerged,\n\t\t\t\t\t\trequiresInsertBefore,\n\t\t\t\t\t\tnode: { properties }\n\t\t\t\t\t}\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\trunEnterAnimation(next, _mountOptions.transition);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\t\t\t\tif (properties.key != null && instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.add(domNode as HTMLElement, `${properties.key}`);\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, node },\n\t\t\t\t\tcurrent\n\t\t\t\t} = item;\n\t\t\t\tconst parent = _parentWrapperMap.get(next);\n\t\t\t\tif (parent && isWNodeWrapper(parent) && parent.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(parent.instance);\n\t\t\t\t\tinstanceData && instanceData.nodeHandler.addRoot();\n\t\t\t\t}\n\n\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current, next);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\n\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\trunDeferredProperties(next);\n\n\t\t\t\tif (instanceData && node.properties.key != null) {\n\t\t\t\t\tinstanceData.nodeHandler.add(next.domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation } = current.node.properties;\n\t\t\t\tif (exitAnimation && exitAnimation !== true) {\n\t\t\t\t\trunExitAnimation(current, _mountOptions.transition, exitAnimation);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t\tcurrent.domNode = undefined;\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\tattached && instanceData.onAttach();\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.domNode = undefined;\n\t\t\t\titem.current.node.bind = undefined;\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tif (tag.toUpperCase() === (domElement.tagName || '')) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_afterRenderCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = findParentWNodeWrapper(childNodes[index]);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tconst instructions: Instruction[] = [];\n\t\tif (newIndex < nextLength) {\n\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\tconst nextWrapper = next[newIndex];\n\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t}\n\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\tnewIndex++;\n\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\toldIndex++;\n\t\t\t} else {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex < nextLength) {\n\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t}\n\n\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst { item, dom, widget } = _processOne(instructions[i]);\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tif (!isWidgetBaseConstructor(widgetConstructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tconst instance = new widgetConstructor() as WidgetBase;\n\t\tif (registry) {\n\t\t\tinstance.registry.base = registry;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tinstanceData.invalidate = () => {\n\t\t\tinstanceData.dirty = true;\n\t\t\tif (!instanceData.rendering && _instanceToWrapperMap.has(instance)) {\n\t\t\t\t_invalidationQueue.push({ instance, depth: next.depth, order: next.order });\n\t\t\t\t_schedule();\n\t\t\t}\n\t\t};\n\t\tinstanceData.rendering = true;\n\t\tinstance.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance.__setChildren__(next.node.children);\n\t\tnext.instance = instance;\n\t\tlet rendered = instance.__render__();\n\t\tinstanceData.rendering = false;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, null);\n\t\t}\n\t\tif (next.instance) {\n\t\t\t_instanceToWrapperMap.set(next.instance, next);\n\t\t\tif (!parentInvalidate && !(next.instance as any).isWNodeWrapper) {\n\t\t\t\tparentInvalidate = next.instance.invalidate.bind(next.instance);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\titem: { next: next.childrenWrappers, meta: { mergeNodes: next.mergeNodes } },\n\t\t\twidget: { type: 'attach', instance, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = (current.instance && _instanceToWrapperMap.get(current.instance)) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tif (!instance) {\n\t\t\treturn [] as ProcessResult;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tnext.instance = instance;\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\t\tnext.hasAnimations = hasAnimations;\n\t\tinstanceData.rendering = true;\n\t\tinstance!.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance!.__setChildren__(next.node.children);\n\t\t_instanceToWrapperMap.set(next.instance!, next);\n\t\tif (instanceData.dirty) {\n\t\t\tlet rendered = instance!.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t\tif (rendered) {\n\t\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, current);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t\t};\n\t\t}\n\t\tinstanceData.rendering = false;\n\t\tnext.childrenWrappers = current.childrenWrappers;\n\t\treturn {\n\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t};\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = current.instance ? _instanceToWrapperMap.get(current.instance)! : current;\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\t_instanceToWrapperMap.delete(current.instance!);\n\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\twidget: { type: 'detach', current }\n\t\t};\n\t}\n\n\tfunction setDomNodeOnParentWrapper(next: VNodeWrapper) {\n\t\tlet parentWNodeWrapper = findParentWNodeWrapper(next);\n\t\twhile (parentWNodeWrapper && !parentWNodeWrapper.domNode) {\n\t\t\tparentWNodeWrapper.domNode = next.domNode;\n\t\t\tconst nextParent = _parentWrapperMap.get(parentWNodeWrapper);\n\t\t\tif (nextParent && isWNodeWrapper(nextParent)) {\n\t\t\t\tparentWNodeWrapper = nextParent;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tparentWNodeWrapper = undefined;\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tlet mergeNodes: Node[] = [];\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (next.node.tag) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (_mountOptions.merge) {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t\tnext.merged = true;\n\t\t}\n\t\tif (next.domNode) {\n\t\t\tif (next.node.children) {\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(next.node.children, next, null);\n\t\t\t}\n\t\t}\n\t\tsetDomNodeOnParentWrapper(next);\n\t\tconst dom: ApplicationInstruction = {\n\t\t\tnext: next!,\n\t\t\tparentDomNode: parentDomNode,\n\t\t\ttype: 'create'\n\t\t};\n\t\tif (next.childrenWrappers) {\n\t\t\treturn {\n\t\t\t\titem: { current: [], next: next.childrenWrappers, meta: { mergeNodes } },\n\t\t\t\tdom\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(current);\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tif (next.node.text && next.node.text !== current.node.text) {\n\t\t\tconst updatedTextNode = parentDomNode!.ownerDocument.createTextNode(next.node.text!);\n\t\t\tparentDomNode!.replaceChild(updatedTextNode, next.domNode!);\n\t\t\tnext.domNode = updatedTextNode;\n\t\t} else if (next.node.children) {\n\t\t\tconst children = renderedToWrapper(next.node.children, next, current);\n\t\t\tnext.childrenWrappers = children;\n\t\t}\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\tcurrent.node.bind = undefined;\n\t\tif (current.hasAnimations) {\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\t\tdom: { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (current.childrenWrappers) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = current.childrenWrappers || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = wrapper.instance ? _instanceToWrapperMap.get(wrapper.instance) || wrapper : wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\t_instanceToWrapperMap.delete(wrapper.instance);\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t}\n\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (wrapper.childrenWrappers) {\n\t\t\t\t\t\twrappers.push(...wrapper.childrenWrappers);\n\t\t\t\t\t\twrapper.childrenWrappers = undefined;\n\t\t\t\t\t}\n\t\t\t\t\t_wrapperSiblingMap.delete(wrapper);\n\t\t\t\t\t_parentWrapperMap.delete(wrapper);\n\t\t\t\t\twrapper.domNode = undefined;\n\t\t\t\t\twrapper.node.bind = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import global from './global';\n\n/**\n * The smallest interval between two representable numbers.\n */\nexport const EPSILON = 1;\n\n/**\n * The maximum safe integer in JavaScript\n */\nexport const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * The minimum safe integer in JavaScript\n */\nexport const MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n\n/**\n * Determines whether the passed value is NaN without coersion.\n *\n * @param value The value to test\n * @return true if the value is NaN, false if it is not\n */\nexport function isNaN(value: any): boolean {\n\treturn typeof value === 'number' && global.isNaN(value);\n}\n\n/**\n * Determines whether the passed value is a finite number without coersion.\n *\n * @param value The value to test\n * @return true if the value is finite, false if it is not\n */\nexport function isFinite(value: any): value is number {\n\treturn typeof value === 'number' && global.isFinite(value);\n}\n\n/**\n * Determines whether the passed value is an integer.\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isInteger(value: any): value is number {\n\treturn isFinite(value) && Math.floor(value) === value;\n}\n\n/**\n * Determines whether the passed value is an integer that is 'safe,' meaning:\n *   1. it can be expressed as an IEEE-754 double precision number\n *   2. it has a one-to-one mapping to a mathematical integer, meaning its\n *      IEEE-754 representation cannot be the result of rounding any other\n *      integer to fit the IEEE-754 representation\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isSafeInteger(value: any): value is number {\n\treturn isInteger(value) && Math.abs(value) <= MAX_SAFE_INTEGER;\n}\n","import global from './global';\nimport { isArrayLike, isIterable, Iterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from '../has/has';\nimport { wrapNative } from './support/util';\n\nexport interface MapCallback<T, U> {\n\t/**\n\t * A callback function when mapping\n\t *\n\t * @param element The element that is currently being mapped\n\t * @param index The current index of the element\n\t */\n\t(element: T, index: number): U;\n}\n\nexport interface FindCallback<T> {\n\t/**\n\t * A callback function when using find\n\t *\n\t * @param element The element that is currenty being analysed\n\t * @param index The current index of the element that is being analysed\n\t * @param array The source array\n\t */\n\t(element: T, index: number, array: ArrayLike<T>): boolean;\n}\n\ninterface WritableArrayLike<T> {\n\treadonly length: number;\n\t[n: number]: T;\n}\n\n/* ES6 Array static methods */\n\nexport interface From {\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @param mapFunction A map function to call on each element in the array\n\t * @param thisArg The execution context for the map function\n\t * @return The new Array\n\t */\n\t<T, U>(source: ArrayLike<T> | Iterable<T>, mapFunction: MapCallback<T, U>, thisArg?: any): Array<U>;\n\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @return The new Array\n\t */\n\t<T>(source: ArrayLike<T> | Iterable<T>): Array<T>;\n}\n\nexport let from: From;\n\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of: <T>(...items: T[]) => Array<T>;\n\n/* ES6 Array instance methods */\n\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin: <T>(target: ArrayLike<T>, offset: number, start: number, end?: number) => ArrayLike<T>;\n\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill: <T>(target: ArrayLike<T>, value: T, start?: number, end?: number) => ArrayLike<T>;\n\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => T | undefined;\n\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => number;\n\n/* ES7 Array instance methods */\n\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes: <T>(target: ArrayLike<T>, searchElement: T, fromIndex?: number) => boolean;\n\nif (has('es6-array') && has('es6-array-fill')) {\n\tfrom = global.Array.from;\n\tof = global.Array.of;\n\tcopyWithin = wrapNative(global.Array.prototype.copyWithin);\n\tfill = wrapNative(global.Array.prototype.fill);\n\tfind = wrapNative(global.Array.prototype.find);\n\tfindIndex = wrapNative(global.Array.prototype.findIndex);\n} else {\n\t// It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n\t// To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\tconst toLength = function toLength(length: number): number {\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlength = Number(length);\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\t/**\n\t * From ES6 7.1.4 ToInteger()\n\t *\n\t * @param value A value to convert\n\t * @return An integer\n\t */\n\tconst toInteger = function toInteger(value: any): number {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (value === 0 || !isFinite(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n\t};\n\n\t/**\n\t * Normalizes an offset against a given length, wrapping it if negative.\n\t *\n\t * @param value The original offset\n\t * @param length The total length to normalize against\n\t * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n\t */\n\tconst normalizeOffset = function normalizeOffset(value: number, length: number): number {\n\t\treturn value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n\t};\n\n\tfrom = function from(\n\t\tthis: ArrayConstructor,\n\t\tarrayLike: Iterable<any> | ArrayLike<any>,\n\t\tmapFunction?: MapCallback<any, any>,\n\t\tthisArg?: any\n\t): Array<any> {\n\t\tif (arrayLike == null) {\n\t\t\tthrow new TypeError('from: requires an array-like object');\n\t\t}\n\n\t\tif (mapFunction && thisArg) {\n\t\t\tmapFunction = mapFunction.bind(thisArg);\n\t\t}\n\n\t\t/* tslint:disable-next-line:variable-name */\n\t\tconst Constructor = this;\n\t\tconst length: number = toLength((arrayLike as any).length);\n\n\t\t// Support extension\n\t\tconst array: any[] =\n\t\t\ttypeof Constructor === 'function' ? <any[]>Object(new Constructor(length)) : new Array(length);\n\n\t\tif (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n\t\t\treturn array;\n\t\t}\n\n\t\t// if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n\t\t// with the iteration on IE when using a NaN array length.\n\t\tif (isArrayLike(arrayLike)) {\n\t\t\tif (length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayLike.length; i++) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 0;\n\t\t\tfor (const value of arrayLike) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(value, i) : value;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif ((arrayLike as any).length !== undefined) {\n\t\t\tarray.length = length;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tof = function of<T>(...items: T[]): Array<T> {\n\t\treturn Array.prototype.slice.call(items);\n\t};\n\n\tcopyWithin = function copyWithin<T>(\n\t\ttarget: ArrayLike<T>,\n\t\toffset: number,\n\t\tstart: number,\n\t\tend?: number\n\t): ArrayLike<T> {\n\t\tif (target == null) {\n\t\t\tthrow new TypeError('copyWithin: target must be an array-like object');\n\t\t}\n\n\t\tconst length = toLength(target.length);\n\t\toffset = normalizeOffset(toInteger(offset), length);\n\t\tstart = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\t\tlet count = Math.min(end - start, length - offset);\n\n\t\tlet direction = 1;\n\t\tif (offset > start && offset < start + count) {\n\t\t\tdirection = -1;\n\t\t\tstart += count - 1;\n\t\t\toffset += count - 1;\n\t\t}\n\n\t\twhile (count > 0) {\n\t\t\tif (start in target) {\n\t\t\t\t(target as WritableArrayLike<T>)[offset] = target[start];\n\t\t\t} else {\n\t\t\t\tdelete (target as WritableArrayLike<T>)[offset];\n\t\t\t}\n\n\t\t\toffset += direction;\n\t\t\tstart += direction;\n\t\t\tcount--;\n\t\t}\n\n\t\treturn target;\n\t};\n\n\tfill = function fill<T>(target: ArrayLike<T>, value: any, start?: number, end?: number): ArrayLike<T> {\n\t\tconst length = toLength(target.length);\n\t\tlet i = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\n\t\twhile (i < end) {\n\t\t\t(target as WritableArrayLike<T>)[i++] = value;\n\t\t}\n\n\t\treturn target;\n\t};\n\n\tfind = function find<T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}): T | undefined {\n\t\tconst index = findIndex<T>(target, callback, thisArg);\n\t\treturn index !== -1 ? target[index] : undefined;\n\t};\n\n\tfindIndex = function findIndex<T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}): number {\n\t\tconst length = toLength(target.length);\n\n\t\tif (!callback) {\n\t\t\tthrow new TypeError('find: second argument must be a function');\n\t\t}\n\n\t\tif (thisArg) {\n\t\t\tcallback = callback.bind(thisArg);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (callback(target[i], i, target)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\nif (has('es7-array')) {\n\tincludes = wrapNative(global.Array.prototype.includes);\n} else {\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\tconst toLength = function toLength(length: number): number {\n\t\tlength = Number(length);\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\tincludes = function includes<T>(target: ArrayLike<T>, searchElement: T, fromIndex: number = 0): boolean {\n\t\tlet len = toLength(target.length);\n\n\t\tfor (let i = fromIndex; i < len; ++i) {\n\t\t\tconst currentElement = target[i];\n\t\t\tif (\n\t\t\t\tsearchElement === currentElement ||\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n","import { Evented, EventObject } from '../core/Evented';\n\nexport type InjectorEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class Injector<T = any> extends Evented<InjectorEventMap> {\n\tprivate _payload: T;\n\tprivate _invalidator: undefined | (() => void);\n\n\tconstructor(payload: T) {\n\t\tsuper();\n\t\tthis._payload = payload;\n\t}\n\n\tpublic setInvalidator(invalidator: () => void) {\n\t\tthis._invalidator = invalidator;\n\t}\n\n\tpublic get(): T {\n\t\treturn this._payload;\n\t}\n\n\tpublic set(payload: T): void {\n\t\tthis._payload = payload;\n\t\tif (this._invalidator) {\n\t\t\tthis._invalidator();\n\t\t}\n\t}\n}\n\nexport default Injector;\n","export type DecoratorHandler = (target: any, propertyKey?: string) => void;\n\n/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler: DecoratorHandler) {\n\treturn function(target: any, propertyKey?: string, descriptor?: PropertyDescriptor) {\n\t\tif (typeof target === 'function') {\n\t\t\thandler(target.prototype, undefined);\n\t\t} else {\n\t\t\thandler(target, propertyKey);\n\t\t}\n\t};\n}\n\nexport default handleDecorator;\n","import { handleDecorator } from './handleDecorator';\nimport { BeforeProperties } from './../interfaces';\n\n/**\n * Decorator that adds the function passed of target method to be run\n * in the `beforeProperties` lifecycle.\n */\nexport function beforeProperties(method: BeforeProperties): (target: any) => void;\nexport function beforeProperties(): (target: any, propertyKey: string) => void;\nexport function beforeProperties(method?: BeforeProperties) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n\t});\n}\n\nexport default beforeProperties;\n","import WeakMap from '../../shim/WeakMap';\nimport { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nimport { InjectorItem, RegistryLabel } from './../interfaces';\n\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap: WeakMap<WidgetBase, InjectorItem[]> = new WeakMap();\n\n/**\n * Defines the contract requires for the get properties function\n * used to map the injected properties.\n */\nexport interface GetProperties<T = any> {\n\t(payload: any, properties: T): T;\n}\n\n/**\n * Defines the inject configuration required for use of the `inject` decorator\n */\nexport interface InjectConfig {\n\t/**\n\t * The label of the registry injector\n\t */\n\tname: RegistryLabel;\n\n\t/**\n\t * Function that returns propertues to inject using the passed properties\n\t * and the injected payload.\n\t */\n\tgetProperties: GetProperties;\n}\n\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }: InjectConfig) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\tbeforeProperties(function(this: WidgetBase & { own: Function }, properties: any) {\n\t\t\tconst injectorItem = this.registry.getInjector(name);\n\t\t\tif (injectorItem) {\n\t\t\t\tconst { injector, invalidator } = injectorItem;\n\t\t\t\tconst registeredInjectors = registeredInjectorsMap.get(this) || [];\n\t\t\t\tif (registeredInjectors.length === 0) {\n\t\t\t\t\tregisteredInjectorsMap.set(this, registeredInjectors);\n\t\t\t\t}\n\t\t\t\tif (registeredInjectors.indexOf(injectorItem) === -1) {\n\t\t\t\t\tthis.own(\n\t\t\t\t\t\tinvalidator.on('invalidate', () => {\n\t\t\t\t\t\t\tthis.invalidate();\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tregisteredInjectors.push(injectorItem);\n\t\t\t\t}\n\t\t\t\treturn getProperties(injector(), properties);\n\t\t\t}\n\t\t})(target);\n\t});\n}\n\nexport default inject;\n","import { handleDecorator } from './handleDecorator';\nimport { DiffPropertyFunction } from './../interfaces';\nimport { auto } from './../diff';\n\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(\n\tpropertyName: string,\n\tdiffFunction: DiffPropertyFunction = auto,\n\treactionFunction?: Function\n) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n\t\ttarget.addDecorator('registeredDiffProperty', propertyName);\n\t\tif (reactionFunction || propertyKey) {\n\t\t\ttarget.addDecorator('diffReaction', {\n\t\t\t\tpropertyName,\n\t\t\t\treaction: propertyKey ? target[propertyKey] : reactionFunction\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport default diffProperty;\n","import { Constructor, WidgetProperties, SupportedClassName } from './../interfaces';\nimport { Registry } from './../Registry';\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\n\n/**\n * A lookup object for available class names\n */\nexport type ClassNames = {\n\t[key: string]: string;\n};\n\n/**\n * A lookup object for available widget classes names\n */\nexport interface Theme {\n\t[key: string]: object;\n}\n\n/**\n * Classes property interface\n */\nexport interface Classes {\n\t[widgetKey: string]: {\n\t\t[classKey: string]: SupportedClassName[];\n\t};\n}\n\n/**\n * Properties required for the Themed mixin\n */\nexport interface ThemedProperties<T = ClassNames> extends WidgetProperties {\n\ttheme?: Theme;\n\tclasses?: Classes;\n\textraClasses?: { [P in keyof T]?: string };\n}\n\nconst THEME_KEY = ' _key';\n\nexport const INJECTED_THEME_KEY = '__theme_injector';\n\n/**\n * Interface for the ThemedMixin\n */\nexport interface ThemedMixin<T = ClassNames> {\n\ttheme(classes: SupportedClassName): SupportedClassName;\n\ttheme(classes: SupportedClassName[]): SupportedClassName[];\n\tproperties: ThemedProperties<T>;\n}\n\n/**\n * Decorator for base css classes\n */\nexport function theme(theme: {}) {\n\treturn handleDecorator((target) => {\n\t\ttarget.addDecorator('baseThemeClasses', theme);\n\t});\n}\n\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes: ClassNames[]): ClassNames {\n\treturn classes.reduce(\n\t\t(currentClassNames, baseClass) => {\n\t\t\tObject.keys(baseClass).forEach((key: string) => {\n\t\t\t\tcurrentClassNames[baseClass[key]] = key;\n\t\t\t});\n\t\t\treturn currentClassNames;\n\t\t},\n\t\t<ClassNames>{}\n\t);\n}\n\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme: any, themeRegistry: Registry): Injector {\n\tconst themeInjector = new Injector(theme);\n\tthemeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n\t\tthemeInjector.setInvalidator(invalidator);\n\t\treturn () => themeInjector.get();\n\t});\n\treturn themeInjector;\n}\n\n/**\n * Function that returns a class decorated with with Themed functionality\n */\n\nexport function ThemedMixin<E, T extends Constructor<WidgetBase<ThemedProperties<E>>>>(\n\tBase: T\n): Constructor<ThemedMixin<E>> & T {\n\t@inject({\n\t\tname: INJECTED_THEME_KEY,\n\t\tgetProperties: (theme: Theme, properties: ThemedProperties): ThemedProperties => {\n\t\t\tif (!properties.theme) {\n\t\t\t\treturn { theme };\n\t\t\t}\n\t\t\treturn {};\n\t\t}\n\t})\n\tabstract class Themed extends Base {\n\t\tpublic abstract properties: ThemedProperties<E>;\n\n\t\t/**\n\t\t * The Themed baseClasses\n\t\t */\n\t\tprivate _registeredBaseTheme: ClassNames | undefined;\n\n\t\t/**\n\t\t * Registered base theme keys\n\t\t */\n\t\tprivate _registeredBaseThemeKeys: string[] = [];\n\n\t\t/**\n\t\t * Reverse lookup of the theme classes\n\t\t */\n\t\tprivate _baseThemeClassesReverseLookup: ClassNames | undefined;\n\n\t\t/**\n\t\t * Indicates if classes meta data need to be calculated.\n\t\t */\n\t\tprivate _recalculateClasses = true;\n\n\t\t/**\n\t\t * Extra classes map\n\t\t */\n\t\tprivate _classes: Classes;\n\n\t\t/**\n\t\t * Loaded theme\n\t\t */\n\t\tprivate _theme: ClassNames = {};\n\n\t\tpublic theme(classes: SupportedClassName): SupportedClassName;\n\t\tpublic theme(classes: SupportedClassName[]): SupportedClassName[];\n\t\tpublic theme(classes: SupportedClassName | SupportedClassName[]): SupportedClassName | SupportedClassName[] {\n\t\t\tif (this._recalculateClasses) {\n\t\t\t\tthis._recalculateThemeClasses();\n\t\t\t}\n\t\t\tif (Array.isArray(classes)) {\n\t\t\t\treturn classes.map((className) => this._getThemeClass(className));\n\t\t\t}\n\t\t\treturn this._getThemeClass(classes);\n\t\t}\n\n\t\t/**\n\t\t * Function fired when `theme` or `extraClasses` are changed.\n\t\t */\n\t\t@diffProperty('theme', shallow)\n\t\t@diffProperty('extraClasses', shallow)\n\t\t@diffProperty('classes', shallow)\n\t\tprotected onPropertiesChanged() {\n\t\t\tthis._recalculateClasses = true;\n\t\t}\n\n\t\tprivate _getThemeClass(className: SupportedClassName): SupportedClassName {\n\t\t\tif (className === undefined || className === null || className === false || className === true) {\n\t\t\t\treturn className;\n\t\t\t}\n\n\t\t\tconst extraClasses = this.properties.extraClasses || ({} as any);\n\t\t\tconst themeClassName = this._baseThemeClassesReverseLookup![className];\n\t\t\tlet resultClassNames: string[] = [];\n\t\t\tif (!themeClassName) {\n\t\t\t\tconsole.warn(`Class name: '${className}' not found in theme`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this._classes) {\n\t\t\t\tconst classes = Object.keys(this._classes).reduce(\n\t\t\t\t\t(classes, key) => {\n\t\t\t\t\t\tconst classNames = Object.keys(this._classes[key]);\n\t\t\t\t\t\tfor (let i = 0; i < classNames.length; i++) {\n\t\t\t\t\t\t\tconst extraClass = this._classes[key][classNames[i]];\n\t\t\t\t\t\t\tif (classNames[i] === themeClassName && extraClass) {\n\t\t\t\t\t\t\t\textraClass.forEach((className) => {\n\t\t\t\t\t\t\t\t\tif (className && className !== true) {\n\t\t\t\t\t\t\t\t\t\tclasses.push(className);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn classes;\n\t\t\t\t\t},\n\t\t\t\t\t[] as string[]\n\t\t\t\t);\n\n\t\t\t\tresultClassNames.push(...classes);\n\t\t\t}\n\n\t\t\tif (extraClasses[themeClassName]) {\n\t\t\t\tresultClassNames.push(extraClasses[themeClassName]);\n\t\t\t}\n\n\t\t\tif (this._theme[themeClassName]) {\n\t\t\t\tresultClassNames.push(this._theme[themeClassName]);\n\t\t\t} else {\n\t\t\t\tresultClassNames.push(this._registeredBaseTheme![themeClassName]);\n\t\t\t}\n\t\t\treturn resultClassNames.join(' ');\n\t\t}\n\n\t\tprivate _recalculateThemeClasses() {\n\t\t\tconst { theme = {}, classes = {} } = this.properties;\n\t\t\tif (!this._registeredBaseTheme) {\n\t\t\t\tconst baseThemes = this.getDecorator('baseThemeClasses');\n\t\t\t\tif (baseThemes.length === 0) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'A base theme has not been provided to this widget. Please use the @theme decorator to add a theme.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n\t\t\t\t\tconst { [THEME_KEY]: key, ...classes } = baseTheme;\n\t\t\t\t\tthis._registeredBaseThemeKeys.push(key);\n\t\t\t\t\treturn { ...finalBaseTheme, ...classes };\n\t\t\t\t}, {});\n\t\t\t\tthis._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n\t\t\t}\n\n\t\t\tthis._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n\t\t\t\treturn { ...baseTheme, ...theme[themeKey] };\n\t\t\t}, {});\n\n\t\t\tthis._classes = Object.keys(classes).reduce((computed, key) => {\n\t\t\t\tif (this._registeredBaseThemeKeys.indexOf(key) > -1) {\n\t\t\t\t\tcomputed = { ...computed, [key]: classes[key] };\n\t\t\t\t}\n\t\t\t\treturn computed;\n\t\t\t}, {});\n\n\t\t\tthis._recalculateClasses = false;\n\t\t}\n\t}\n\n\treturn Themed;\n}\n\nexport default ThemedMixin;\n","import { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n\nexport function alwaysRender() {\n\treturn handleDecorator((target, propertyKey) => {\n\t\tbeforeProperties(function(this: WidgetBase) {\n\t\t\tthis.invalidate();\n\t\t})(target);\n\t});\n}\n\nexport default alwaysRender;\n","import { WidgetBase, noBind } from './WidgetBase';\nimport { renderer } from './vdom';\nimport { from } from '../shim/array';\nimport { w, dom } from './d';\nimport global from '../shim/global';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\n\nexport enum CustomElementChildType {\n\tDOJO = 'DOJO',\n\tNODE = 'NODE',\n\tTEXT = 'TEXT'\n}\n\nexport function DomToWidgetWrapper(domNode: HTMLElement): any {\n\t@alwaysRender()\n\tclass DomToWidgetWrapper extends WidgetBase<any> {\n\t\tprotected render() {\n\t\t\tconst properties = Object.keys(this.properties).reduce(\n\t\t\t\t(props, key: string) => {\n\t\t\t\t\tconst value = this.properties[key];\n\t\t\t\t\tif (key.indexOf('on') === 0) {\n\t\t\t\t\t\tkey = `__${key}`;\n\t\t\t\t\t}\n\t\t\t\t\tprops[key] = value;\n\t\t\t\t\treturn props;\n\t\t\t\t},\n\t\t\t\t{} as any\n\t\t\t);\n\t\t\treturn dom({ node: domNode, props: properties, diffType: 'dom' });\n\t\t}\n\n\t\tstatic get domNode() {\n\t\t\treturn domNode;\n\t\t}\n\t}\n\n\treturn DomToWidgetWrapper;\n}\n\nexport function create(descriptor: any, WidgetConstructor: any): any {\n\tconst { attributes, childType, registryFactory } = descriptor;\n\tconst attributeMap: any = {};\n\n\tattributes.forEach((propertyName: string) => {\n\t\tconst attributeName = propertyName.toLowerCase();\n\t\tattributeMap[attributeName] = propertyName;\n\t});\n\n\treturn class extends HTMLElement {\n\t\tprivate _renderer: any;\n\t\tprivate _properties: any = {};\n\t\tprivate _children: any[] = [];\n\t\tprivate _eventProperties: any = {};\n\t\tprivate _initialised = false;\n\n\t\tpublic connectedCallback() {\n\t\t\tif (this._initialised) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst domProperties: any = {};\n\t\t\tconst { attributes, properties, events } = descriptor;\n\n\t\t\tthis._properties = { ...this._properties, ...this._attributesToProperties(attributes) };\n\n\t\t\t[...attributes, ...properties].forEach((propertyName: string) => {\n\t\t\t\tconst value = (this as any)[propertyName];\n\t\t\t\tconst filteredPropertyName = propertyName.replace(/^on/, '__');\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tthis._properties[propertyName] = value;\n\t\t\t\t}\n\n\t\t\t\tif (filteredPropertyName !== propertyName) {\n\t\t\t\t\tdomProperties[filteredPropertyName] = {\n\t\t\t\t\t\tget: () => this._getProperty(propertyName),\n\t\t\t\t\t\tset: (value: any) => this._setProperty(propertyName, value)\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tdomProperties[propertyName] = {\n\t\t\t\t\tget: () => this._getProperty(propertyName),\n\t\t\t\t\tset: (value: any) => this._setProperty(propertyName, value)\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tevents.forEach((propertyName: string) => {\n\t\t\t\tconst eventName = propertyName.replace(/^on/, '').toLowerCase();\n\t\t\t\tconst filteredPropertyName = propertyName.replace(/^on/, '__on');\n\n\t\t\t\tdomProperties[filteredPropertyName] = {\n\t\t\t\t\tget: () => this._getEventProperty(propertyName),\n\t\t\t\t\tset: (value: any) => this._setEventProperty(propertyName, value)\n\t\t\t\t};\n\n\t\t\t\tthis._eventProperties[propertyName] = undefined;\n\t\t\t\tthis._properties[propertyName] = (...args: any[]) => {\n\t\t\t\t\tconst eventCallback = this._getEventProperty(propertyName);\n\t\t\t\t\tif (typeof eventCallback === 'function') {\n\t\t\t\t\t\teventCallback(...args);\n\t\t\t\t\t}\n\t\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent(eventName, {\n\t\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\t\tdetail: args\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tObject.defineProperties(this, domProperties);\n\n\t\t\tconst children = childType === CustomElementChildType.TEXT ? this.childNodes : this.children;\n\n\t\t\tfrom(children).forEach((childNode: Node) => {\n\t\t\t\tif (childType === CustomElementChildType.DOJO) {\n\t\t\t\t\tchildNode.addEventListener('dojo-ce-render', () => this._render());\n\t\t\t\t\tchildNode.addEventListener('dojo-ce-connected', () => this._render());\n\t\t\t\t\tthis._children.push(DomToWidgetWrapper(childNode as HTMLElement));\n\t\t\t\t} else {\n\t\t\t\t\tthis._children.push(dom({ node: childNode as HTMLElement, diffType: 'dom' }));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.addEventListener('dojo-ce-connected', (e: any) => this._childConnected(e));\n\n\t\t\tconst widgetProperties = this._properties;\n\t\t\tconst renderChildren = () => this.__children__();\n\t\t\tconst Wrapper = class extends WidgetBase {\n\t\t\t\trender() {\n\t\t\t\t\treturn w(WidgetConstructor, widgetProperties, renderChildren());\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst registry = registryFactory();\n\t\t\tconst themeContext = registerThemeInjector(this._getTheme(), registry);\n\t\t\tglobal.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n\t\t\tconst r = renderer(() => w(Wrapper, {}));\n\t\t\tthis._renderer = r;\n\t\t\tr.mount({ domNode: this, merge: false, registry });\n\t\t\tconst root = this.children[0];\n\t\t\tif (root) {\n\t\t\t\tconst { display = 'block' } = global.getComputedStyle(root);\n\t\t\t\tthis.style.display = display;\n\t\t\t}\n\n\t\t\tthis._initialised = true;\n\t\t\tthis.dispatchEvent(\n\t\t\t\tnew CustomEvent('dojo-ce-connected', {\n\t\t\t\t\tbubbles: true,\n\t\t\t\t\tdetail: this\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tprivate _getTheme() {\n\t\t\tif (global && global.dojoce && global.dojoce.theme) {\n\t\t\t\treturn global.dojoce.themes[global.dojoce.theme];\n\t\t\t}\n\t\t}\n\n\t\tprivate _childConnected(e: any) {\n\t\t\tconst node = e.detail;\n\t\t\tif (node.parentNode === this) {\n\t\t\t\tconst exists = this._children.some((child) => child.domNode === node);\n\t\t\t\tif (!exists) {\n\t\t\t\t\tnode.addEventListener('dojo-ce-render', () => this._render());\n\t\t\t\t\tthis._children.push(DomToWidgetWrapper(node));\n\t\t\t\t\tthis._render();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _render() {\n\t\t\tif (this._renderer) {\n\t\t\t\tthis._renderer.invalidate();\n\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\tnew CustomEvent('dojo-ce-render', {\n\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\tdetail: this\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tpublic __properties__() {\n\t\t\treturn { ...this._properties, ...this._eventProperties };\n\t\t}\n\n\t\tpublic __children__() {\n\t\t\tif (childType === CustomElementChildType.DOJO) {\n\t\t\t\treturn this._children.filter((Child) => Child.domNode.isWidget).map((Child: any) => {\n\t\t\t\t\tconst { domNode } = Child;\n\t\t\t\t\treturn w(Child, { ...domNode.__properties__() }, [...domNode.__children__()]);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn this._children;\n\t\t\t}\n\t\t}\n\n\t\tpublic attributeChangedCallback(name: string, oldValue: string | null, value: string | null) {\n\t\t\tconst propertyName = attributeMap[name];\n\t\t\tthis._setProperty(propertyName, value);\n\t\t}\n\n\t\tprivate _setEventProperty(propertyName: string, value: any) {\n\t\t\tthis._eventProperties[propertyName] = value;\n\t\t}\n\n\t\tprivate _getEventProperty(propertyName: string) {\n\t\t\treturn this._eventProperties[propertyName];\n\t\t}\n\n\t\tprivate _setProperty(propertyName: string, value: any) {\n\t\t\tif (typeof value === 'function') {\n\t\t\t\tvalue[noBind] = true;\n\t\t\t}\n\t\t\tthis._properties[propertyName] = value;\n\t\t\tthis._render();\n\t\t}\n\n\t\tprivate _getProperty(propertyName: string) {\n\t\t\treturn this._properties[propertyName];\n\t\t}\n\n\t\tprivate _attributesToProperties(attributes: string[]) {\n\t\t\treturn attributes.reduce((properties: any, propertyName: string) => {\n\t\t\t\tconst attributeName = propertyName.toLowerCase();\n\t\t\t\tconst value = this.getAttribute(attributeName);\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tproperties[propertyName] = value;\n\t\t\t\t}\n\t\t\t\treturn properties;\n\t\t\t}, {});\n\t\t}\n\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(attributeMap);\n\t\t}\n\n\t\tpublic get isWidget() {\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\nexport function register(WidgetConstructor: any): void {\n\tconst descriptor = WidgetConstructor.prototype && WidgetConstructor.prototype.__customElementDescriptor;\n\n\tif (!descriptor) {\n\t\tthrow new Error(\n\t\t\t'Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?'\n\t\t);\n\t}\n\n\tglobal.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\n\nexport default register;\n","import { Constructor, WidgetProperties } from '../interfaces';\nimport { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n\nexport type CustomElementPropertyNames<P extends object> = ((keyof P) | (keyof WidgetProperties))[];\n\n/**\n * Defines the custom element configuration used by the customElement decorator\n */\nexport interface CustomElementConfig<P extends object = { [index: string]: any }> {\n\t/**\n\t * The tag of the custom element\n\t */\n\ttag: string;\n\n\t/**\n\t * List of widget properties to expose as properties on the custom element\n\t */\n\tproperties?: CustomElementPropertyNames<P>;\n\n\t/**\n\t * List of attributes on the custom element to map to widget properties\n\t */\n\tattributes?: CustomElementPropertyNames<P>;\n\n\t/**\n\t * List of events to expose\n\t */\n\tevents?: CustomElementPropertyNames<P>;\n\n\tchildType?: CustomElementChildType;\n\n\tregistryFactory?: () => Registry;\n}\n\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement<P extends object = { [index: string]: any }>({\n\ttag,\n\tproperties = [],\n\tattributes = [],\n\tevents = [],\n\tchildType = CustomElementChildType.DOJO,\n\tregistryFactory = () => new Registry()\n}: CustomElementConfig<P>) {\n\treturn function<T extends Constructor<any>>(target: T) {\n\t\ttarget.prototype.__customElementDescriptor = {\n\t\t\ttagName: tag,\n\t\t\tattributes,\n\t\t\tproperties,\n\t\t\tevents,\n\t\t\tchildType,\n\t\t\tregistryFactory\n\t\t};\n\t};\n}\n\nexport default customElement;\n","import handleDecorator, { DecoratorHandler } from './handleDecorator';\n\nexport function watch(): DecoratorHandler {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('afterConstructor', function(this: any) {\n\t\t\tif (propertyKey) {\n\t\t\t\tlet _value: any = this[propertyKey];\n\t\t\t\tObject.defineProperty(this, propertyKey, {\n\t\t\t\t\tset(value: any) {\n\t\t\t\t\t\t_value = value;\n\t\t\t\t\t\tthis.invalidate();\n\t\t\t\t\t},\n\t\t\t\t\tget() {\n\t\t\t\t\t\treturn _value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport default watch;\n","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport customElement from '@dojo/framework/widget-core/decorators/customElement';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { theme, ThemedMixin } from '@dojo/framework/widget-core/mixins/Themed';\nimport { watch } from '@dojo/framework/widget-core/decorators/watch';\n\nimport * as css from './TodoApp.m.css';\n\n@theme(css)\n@customElement({\n    tag: 'my-todo',\n    events: [],\n    attributes: [],\n    properties: []\n})\nexport default class TodoApp extends ThemedMixin(WidgetBase) {\n    @watch()\n    private list = [\n        { id: 1, text: 'my initial todo', checked: false },\n        { id: 2, text: 'Learn about Web Components', checked: true }\n    ];\n\n    protected render() {\n        return [\n            v('h1', {}, ['Todos WC - Dojo2']),\n            v('section', {}, [\n                v('todo-input', {\n                    onsubmit: (e: CustomEvent) => {\n                        this.list = [\n                            ...this.list,\n                            {\n                                id: this.list.length,\n                                text: e.detail[0],\n                                checked: false\n                            }\n                        ];\n                    }\n                }),\n                v(\n                    'ul',\n                    { classes: this.theme(css.listcontainer) },\n                    this.list.map((todo, index) => {\n                        return v('todo-item', {\n                            text: todo.text,\n                            checked: todo.checked,\n                            index: index,\n                            onremoved: (e: CustomEvent) => {\n                                const data = e.detail[0];\n                                this.list = [\n                                    ...this.list.slice(0, data.index),\n                                    ...this.list.slice(data.index + 1)\n                                ];\n                            },\n                            onchecked: (e: CustomEvent) => {\n                                const data = e.detail[0];\n                                const item = this.list[data.index];\n                                this.list[data.index] = { ...item, checked: !item.checked };\n                                this.list = [...this.list];\n                            }\n                        });\n                    })\n                )\n            ])\n        ];\n    }\n}\n","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport customElement from '@dojo/framework/widget-core/decorators/customElement';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { theme, ThemedMixin } from '@dojo/framework/widget-core/mixins/Themed';\n\nimport * as css from './TodoInput.m.css';\nimport { watch } from '@dojo/framework/widget-core/decorators/watch';\n\nexport interface TodoInputProperties {\n    text?: string;\n    onSubmit: (data: any) => void;\n}\n\n@theme(css)\n@customElement<TodoInputProperties>({\n    tag: 'todo-input',\n    events: ['onSubmit'],\n    attributes: [],\n    properties: []\n})\nexport default class TodoInput extends ThemedMixin(WidgetBase)<\n    TodoInputProperties\n> {\n    newtodo: string = '';\n\n    @watch()\n    finaltodo: string = '';\n\n    protected render() {\n        return [\n            v(\n                'form',\n                {\n                    classes: this.theme(css.newtodoform),\n                    onsubmit: (e: Event) => {\n                        const { onSubmit } = this.properties;\n                        e.preventDefault();\n                        e.stopPropagation();\n                        this.finaltodo = this.newtodo;\n                        onSubmit(this.finaltodo);\n                    }\n                },\n                [\n                    v('input', {\n                        classes: this.theme(css.newtodo),\n                        type: 'text',\n                        value: '',\n                        placeholder: 'What needs to be done?',\n                        oninput: (e: Event) => {\n                            this.newtodo = (e.target as HTMLInputElement).value;\n                        }\n                    })\n                ]\n            )\n        ];\n    }\n}\n","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport customElement from '@dojo/framework/widget-core/decorators/customElement';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { theme, ThemedMixin } from '@dojo/framework/widget-core/mixins/Themed';\n\nimport * as css from './TodoItem.m.css';\n\nexport interface TodoItemProperties {\n    text?: string;\n    checked?: boolean;\n    index?: number;\n    onChecked: (data: any) => void;\n    onRemoved: (data: any) => void;\n}\n\n@theme(css)\n@customElement<TodoItemProperties>({\n    tag: 'todo-item',\n    events: ['onChecked', 'onRemoved'],\n    attributes: ['text', 'checked', 'index'],\n    properties: []\n})\nexport default class TodoItem extends ThemedMixin(WidgetBase)<\n    TodoItemProperties\n> {\n    protected render() {\n        const { text, checked, onRemoved, onChecked } = this.properties;\n\n        return [\n            v(\n                'li',\n                {\n                    classes: [\n                        this.theme(css.item),\n                        checked ? this.theme(css.completed) : ''\n                    ]\n                },\n                [\n                    v('input', {\n                        type: 'checkbox',\n                        checked: checked,\n                        onchange: () => {\n                            onChecked(this.properties);\n                        }\n                    }),\n                    v('label', {}, [text]),\n                    v(\n                        'button',\n                        {\n                            classes: this.theme(css.destroy),\n                            onclick: () => {\n                                onRemoved(this.properties);\n                            }\n                        },\n                        ['X']\n                    )\n                ]\n            )\n        ];\n    }\n}\n","import TodoApp from './todo-app/TodoApp';\nimport TodoInput from './todo-input/TodoInput';\nimport TodoItem from './todo-item/TodoItem';\n\nimport { register } from '@dojo/framework/widget-core/registerCustomElement';\n\nregister(TodoApp);\nregister(TodoItem);\nregister(TodoInput);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"dojo-todo/TodoApp\",\"listcontainer\":\"TodoApp-m__listcontainer__W9a5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"dojo-todo/TodoInput\",\"newtodoform\":\"TodoInput-m__newtodoform__2YR5d\",\"newtodo\":\"TodoInput-m__newtodo__3EppN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"dojo-todo/TodoItem\",\"item\":\"TodoItem-m__item__1scVn\",\"completed\":\"TodoItem-m__completed__jvE0L\",\"destroy\":\"TodoItem-m__destroy__sl7i1\"};"],"sourceRoot":""}